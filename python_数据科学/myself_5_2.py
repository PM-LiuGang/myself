# IPython log file

get_ipython().run_line_magic('cd', 'c')
get_ipython().run_line_magic('ls', '')
from sklearn.datasets import load_iris
iris = load_iris()
x = iris.data
y = iris.target
y
#[Out]# array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#[Out]#        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#[Out]#        0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#[Out]#        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#[Out]#        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
#[Out]#        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
#[Out]#        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])
x
#[Out]# array([[5.1, 3.5, 1.4, 0.2],
#[Out]#        [4.9, 3. , 1.4, 0.2],
#[Out]#        [4.7, 3.2, 1.3, 0.2],
#[Out]#        [4.6, 3.1, 1.5, 0.2],
#[Out]#        [5. , 3.6, 1.4, 0.2],
#[Out]#        [5.4, 3.9, 1.7, 0.4],
#[Out]#        [4.6, 3.4, 1.4, 0.3],
#[Out]#        [5. , 3.4, 1.5, 0.2],
#[Out]#        [4.4, 2.9, 1.4, 0.2],
#[Out]#        [4.9, 3.1, 1.5, 0.1],
#[Out]#        [5.4, 3.7, 1.5, 0.2],
#[Out]#        [4.8, 3.4, 1.6, 0.2],
#[Out]#        [4.8, 3. , 1.4, 0.1],
#[Out]#        [4.3, 3. , 1.1, 0.1],
#[Out]#        [5.8, 4. , 1.2, 0.2],
#[Out]#        [5.7, 4.4, 1.5, 0.4],
#[Out]#        [5.4, 3.9, 1.3, 0.4],
#[Out]#        [5.1, 3.5, 1.4, 0.3],
#[Out]#        [5.7, 3.8, 1.7, 0.3],
#[Out]#        [5.1, 3.8, 1.5, 0.3],
#[Out]#        [5.4, 3.4, 1.7, 0.2],
#[Out]#        [5.1, 3.7, 1.5, 0.4],
#[Out]#        [4.6, 3.6, 1. , 0.2],
#[Out]#        [5.1, 3.3, 1.7, 0.5],
#[Out]#        [4.8, 3.4, 1.9, 0.2],
#[Out]#        [5. , 3. , 1.6, 0.2],
#[Out]#        [5. , 3.4, 1.6, 0.4],
#[Out]#        [5.2, 3.5, 1.5, 0.2],
#[Out]#        [5.2, 3.4, 1.4, 0.2],
#[Out]#        [4.7, 3.2, 1.6, 0.2],
#[Out]#        [4.8, 3.1, 1.6, 0.2],
#[Out]#        [5.4, 3.4, 1.5, 0.4],
#[Out]#        [5.2, 4.1, 1.5, 0.1],
#[Out]#        [5.5, 4.2, 1.4, 0.2],
#[Out]#        [4.9, 3.1, 1.5, 0.1],
#[Out]#        [5. , 3.2, 1.2, 0.2],
#[Out]#        [5.5, 3.5, 1.3, 0.2],
#[Out]#        [4.9, 3.1, 1.5, 0.1],
#[Out]#        [4.4, 3. , 1.3, 0.2],
#[Out]#        [5.1, 3.4, 1.5, 0.2],
#[Out]#        [5. , 3.5, 1.3, 0.3],
#[Out]#        [4.5, 2.3, 1.3, 0.3],
#[Out]#        [4.4, 3.2, 1.3, 0.2],
#[Out]#        [5. , 3.5, 1.6, 0.6],
#[Out]#        [5.1, 3.8, 1.9, 0.4],
#[Out]#        [4.8, 3. , 1.4, 0.3],
#[Out]#        [5.1, 3.8, 1.6, 0.2],
#[Out]#        [4.6, 3.2, 1.4, 0.2],
#[Out]#        [5.3, 3.7, 1.5, 0.2],
#[Out]#        [5. , 3.3, 1.4, 0.2],
#[Out]#        [7. , 3.2, 4.7, 1.4],
#[Out]#        [6.4, 3.2, 4.5, 1.5],
#[Out]#        [6.9, 3.1, 4.9, 1.5],
#[Out]#        [5.5, 2.3, 4. , 1.3],
#[Out]#        [6.5, 2.8, 4.6, 1.5],
#[Out]#        [5.7, 2.8, 4.5, 1.3],
#[Out]#        [6.3, 3.3, 4.7, 1.6],
#[Out]#        [4.9, 2.4, 3.3, 1. ],
#[Out]#        [6.6, 2.9, 4.6, 1.3],
#[Out]#        [5.2, 2.7, 3.9, 1.4],
#[Out]#        [5. , 2. , 3.5, 1. ],
#[Out]#        [5.9, 3. , 4.2, 1.5],
#[Out]#        [6. , 2.2, 4. , 1. ],
#[Out]#        [6.1, 2.9, 4.7, 1.4],
#[Out]#        [5.6, 2.9, 3.6, 1.3],
#[Out]#        [6.7, 3.1, 4.4, 1.4],
#[Out]#        [5.6, 3. , 4.5, 1.5],
#[Out]#        [5.8, 2.7, 4.1, 1. ],
#[Out]#        [6.2, 2.2, 4.5, 1.5],
#[Out]#        [5.6, 2.5, 3.9, 1.1],
#[Out]#        [5.9, 3.2, 4.8, 1.8],
#[Out]#        [6.1, 2.8, 4. , 1.3],
#[Out]#        [6.3, 2.5, 4.9, 1.5],
#[Out]#        [6.1, 2.8, 4.7, 1.2],
#[Out]#        [6.4, 2.9, 4.3, 1.3],
#[Out]#        [6.6, 3. , 4.4, 1.4],
#[Out]#        [6.8, 2.8, 4.8, 1.4],
#[Out]#        [6.7, 3. , 5. , 1.7],
#[Out]#        [6. , 2.9, 4.5, 1.5],
#[Out]#        [5.7, 2.6, 3.5, 1. ],
#[Out]#        [5.5, 2.4, 3.8, 1.1],
#[Out]#        [5.5, 2.4, 3.7, 1. ],
#[Out]#        [5.8, 2.7, 3.9, 1.2],
#[Out]#        [6. , 2.7, 5.1, 1.6],
#[Out]#        [5.4, 3. , 4.5, 1.5],
#[Out]#        [6. , 3.4, 4.5, 1.6],
#[Out]#        [6.7, 3.1, 4.7, 1.5],
#[Out]#        [6.3, 2.3, 4.4, 1.3],
#[Out]#        [5.6, 3. , 4.1, 1.3],
#[Out]#        [5.5, 2.5, 4. , 1.3],
#[Out]#        [5.5, 2.6, 4.4, 1.2],
#[Out]#        [6.1, 3. , 4.6, 1.4],
#[Out]#        [5.8, 2.6, 4. , 1.2],
#[Out]#        [5. , 2.3, 3.3, 1. ],
#[Out]#        [5.6, 2.7, 4.2, 1.3],
#[Out]#        [5.7, 3. , 4.2, 1.2],
#[Out]#        [5.7, 2.9, 4.2, 1.3],
#[Out]#        [6.2, 2.9, 4.3, 1.3],
#[Out]#        [5.1, 2.5, 3. , 1.1],
#[Out]#        [5.7, 2.8, 4.1, 1.3],
#[Out]#        [6.3, 3.3, 6. , 2.5],
#[Out]#        [5.8, 2.7, 5.1, 1.9],
#[Out]#        [7.1, 3. , 5.9, 2.1],
#[Out]#        [6.3, 2.9, 5.6, 1.8],
#[Out]#        [6.5, 3. , 5.8, 2.2],
#[Out]#        [7.6, 3. , 6.6, 2.1],
#[Out]#        [4.9, 2.5, 4.5, 1.7],
#[Out]#        [7.3, 2.9, 6.3, 1.8],
#[Out]#        [6.7, 2.5, 5.8, 1.8],
#[Out]#        [7.2, 3.6, 6.1, 2.5],
#[Out]#        [6.5, 3.2, 5.1, 2. ],
#[Out]#        [6.4, 2.7, 5.3, 1.9],
#[Out]#        [6.8, 3. , 5.5, 2.1],
#[Out]#        [5.7, 2.5, 5. , 2. ],
#[Out]#        [5.8, 2.8, 5.1, 2.4],
#[Out]#        [6.4, 3.2, 5.3, 2.3],
#[Out]#        [6.5, 3. , 5.5, 1.8],
#[Out]#        [7.7, 3.8, 6.7, 2.2],
#[Out]#        [7.7, 2.6, 6.9, 2.3],
#[Out]#        [6. , 2.2, 5. , 1.5],
#[Out]#        [6.9, 3.2, 5.7, 2.3],
#[Out]#        [5.6, 2.8, 4.9, 2. ],
#[Out]#        [7.7, 2.8, 6.7, 2. ],
#[Out]#        [6.3, 2.7, 4.9, 1.8],
#[Out]#        [6.7, 3.3, 5.7, 2.1],
#[Out]#        [7.2, 3.2, 6. , 1.8],
#[Out]#        [6.2, 2.8, 4.8, 1.8],
#[Out]#        [6.1, 3. , 4.9, 1.8],
#[Out]#        [6.4, 2.8, 5.6, 2.1],
#[Out]#        [7.2, 3. , 5.8, 1.6],
#[Out]#        [7.4, 2.8, 6.1, 1.9],
#[Out]#        [7.9, 3.8, 6.4, 2. ],
#[Out]#        [6.4, 2.8, 5.6, 2.2],
#[Out]#        [6.3, 2.8, 5.1, 1.5],
#[Out]#        [6.1, 2.6, 5.6, 1.4],
#[Out]#        [7.7, 3. , 6.1, 2.3],
#[Out]#        [6.3, 3.4, 5.6, 2.4],
#[Out]#        [6.4, 3.1, 5.5, 1.8],
#[Out]#        [6. , 3. , 4.8, 1.8],
#[Out]#        [6.9, 3.1, 5.4, 2.1],
#[Out]#        [6.7, 3.1, 5.6, 2.4],
#[Out]#        [6.9, 3.1, 5.1, 2.3],
#[Out]#        [5.8, 2.7, 5.1, 1.9],
#[Out]#        [6.8, 3.2, 5.9, 2.3],
#[Out]#        [6.7, 3.3, 5.7, 2.5],
#[Out]#        [6.7, 3. , 5.2, 2.3],
#[Out]#        [6.3, 2.5, 5. , 1.9],
#[Out]#        [6.5, 3. , 5.2, 2. ],
#[Out]#        [6.2, 3.4, 5.4, 2.3],
#[Out]#        [5.9, 3. , 5.1, 1.8]])
y
#[Out]# array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#[Out]#        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#[Out]#        0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#[Out]#        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#[Out]#        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
#[Out]#        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
#[Out]#        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])
import pandas as pd
dfx = pd.DataFrame(x)
dfy = pd.DataFrame(y)
from sklearn.neighbors import KNeighborsClassifier
model = KNeighborsClassifier(n_neighbors=1)
model.fit(dfx,dfy)
#[Out]# KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
#[Out]#            metric_params=None, n_jobs=1, n_neighbors=1, p=2,
#[Out]#            weights='uniform')
dfx.head()
#[Out]#      0    1    2    3
#[Out]# 0  5.1  3.5  1.4  0.2
#[Out]# 1  4.9  3.0  1.4  0.2
#[Out]# 2  4.7  3.2  1.3  0.2
#[Out]# 3  4.6  3.1  1.5  0.2
#[Out]# 4  5.0  3.6  1.4  0.2
dfy.head()
#[Out]#    0
#[Out]# 0  0
#[Out]# 1  0
#[Out]# 2  0
#[Out]# 3  0
#[Out]# 4  0
type(dfy)
#[Out]# pandas.core.frame.DataFrame
dfy[0].value_counts()
#[Out]# 2    50
#[Out]# 1    50
#[Out]# 0    50
#[Out]# Name: 0, dtype: int64
y_model
y_model = model.predict(x)
from sklearn.metrics import accuracy_score
accuracy_score(y,y_model)
#[Out]# 1.0
from sklearn.cross_validation import train_test_split
version __train_test_split__
version __sklearn.cross_validation__
version __cross_validation__
x1,x2,y1,y2 = train_test_split(dfx,dfy,,random_state=0,train_size=0.5)
x1,x2,y1,y2 = train_test_split(dfx,dfy,random_state=0,train_size=0.5)
model.fit(x1,y1)
#[Out]# KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
#[Out]#            metric_params=None, n_jobs=1, n_neighbors=1, p=2,
#[Out]#            weights='uniform')
y2_model = model.predict(x2)
accuracy_score(y2,y2_model)
#[Out]# 0.9066666666666666
y2_model = model.fit(x1,y1).predict(x2)
y1_model = model.fit(x2,y2).predict(x1)
accuracy_score(y1,y1_model)
#[Out]# 0.96
accuracy_score(y2,y2_model)
#[Out]# 0.9066666666666666
from sklearn.cross_validation import cross_val_score
cross_val_score(model,dfx,dfy,cv=5)
get_ipython().run_line_magic('pinfo', 'cross_val_score')
cross_val_score(model,dfx,dfy,cv=5)
dfx,index
dfx.index
#[Out]# RangeIndex(start=0, stop=150, step=1)
dfx.columns
#[Out]# RangeIndex(start=0, stop=4, step=1)
dfy.index
#[Out]# RangeIndex(start=0, stop=150, step=1)
dfy.columns
#[Out]# RangeIndex(start=0, stop=1, step=1)
model
#[Out]# KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
#[Out]#            metric_params=None, n_jobs=1, n_neighbors=1, p=2,
#[Out]#            weights='uniform')
cross_val_score(model,dfx,dfy)
dfx.shape
#[Out]# (150, 4)
dfy.shape
#[Out]# (150, 1)
type(dfx)
#[Out]# pandas.core.frame.DataFrame
type(dfy)
#[Out]# pandas.core.frame.DataFrame
cross_val_score(model,dfx,dfy)
dfx.head()
#[Out]#      0    1    2    3
#[Out]# 0  5.1  3.5  1.4  0.2
#[Out]# 1  4.9  3.0  1.4  0.2
#[Out]# 2  4.7  3.2  1.3  0.2
#[Out]# 3  4.6  3.1  1.5  0.2
#[Out]# 4  5.0  3.6  1.4  0.2
dfy.head()
#[Out]#    0
#[Out]# 0  0
#[Out]# 1  0
#[Out]# 2  0
#[Out]# 3  0
#[Out]# 4  0
dfx.as_matrix()
#[Out]# array([[5.1, 3.5, 1.4, 0.2],
#[Out]#        [4.9, 3. , 1.4, 0.2],
#[Out]#        [4.7, 3.2, 1.3, 0.2],
#[Out]#        [4.6, 3.1, 1.5, 0.2],
#[Out]#        [5. , 3.6, 1.4, 0.2],
#[Out]#        [5.4, 3.9, 1.7, 0.4],
#[Out]#        [4.6, 3.4, 1.4, 0.3],
#[Out]#        [5. , 3.4, 1.5, 0.2],
#[Out]#        [4.4, 2.9, 1.4, 0.2],
#[Out]#        [4.9, 3.1, 1.5, 0.1],
#[Out]#        [5.4, 3.7, 1.5, 0.2],
#[Out]#        [4.8, 3.4, 1.6, 0.2],
#[Out]#        [4.8, 3. , 1.4, 0.1],
#[Out]#        [4.3, 3. , 1.1, 0.1],
#[Out]#        [5.8, 4. , 1.2, 0.2],
#[Out]#        [5.7, 4.4, 1.5, 0.4],
#[Out]#        [5.4, 3.9, 1.3, 0.4],
#[Out]#        [5.1, 3.5, 1.4, 0.3],
#[Out]#        [5.7, 3.8, 1.7, 0.3],
#[Out]#        [5.1, 3.8, 1.5, 0.3],
#[Out]#        [5.4, 3.4, 1.7, 0.2],
#[Out]#        [5.1, 3.7, 1.5, 0.4],
#[Out]#        [4.6, 3.6, 1. , 0.2],
#[Out]#        [5.1, 3.3, 1.7, 0.5],
#[Out]#        [4.8, 3.4, 1.9, 0.2],
#[Out]#        [5. , 3. , 1.6, 0.2],
#[Out]#        [5. , 3.4, 1.6, 0.4],
#[Out]#        [5.2, 3.5, 1.5, 0.2],
#[Out]#        [5.2, 3.4, 1.4, 0.2],
#[Out]#        [4.7, 3.2, 1.6, 0.2],
#[Out]#        [4.8, 3.1, 1.6, 0.2],
#[Out]#        [5.4, 3.4, 1.5, 0.4],
#[Out]#        [5.2, 4.1, 1.5, 0.1],
#[Out]#        [5.5, 4.2, 1.4, 0.2],
#[Out]#        [4.9, 3.1, 1.5, 0.1],
#[Out]#        [5. , 3.2, 1.2, 0.2],
#[Out]#        [5.5, 3.5, 1.3, 0.2],
#[Out]#        [4.9, 3.1, 1.5, 0.1],
#[Out]#        [4.4, 3. , 1.3, 0.2],
#[Out]#        [5.1, 3.4, 1.5, 0.2],
#[Out]#        [5. , 3.5, 1.3, 0.3],
#[Out]#        [4.5, 2.3, 1.3, 0.3],
#[Out]#        [4.4, 3.2, 1.3, 0.2],
#[Out]#        [5. , 3.5, 1.6, 0.6],
#[Out]#        [5.1, 3.8, 1.9, 0.4],
#[Out]#        [4.8, 3. , 1.4, 0.3],
#[Out]#        [5.1, 3.8, 1.6, 0.2],
#[Out]#        [4.6, 3.2, 1.4, 0.2],
#[Out]#        [5.3, 3.7, 1.5, 0.2],
#[Out]#        [5. , 3.3, 1.4, 0.2],
#[Out]#        [7. , 3.2, 4.7, 1.4],
#[Out]#        [6.4, 3.2, 4.5, 1.5],
#[Out]#        [6.9, 3.1, 4.9, 1.5],
#[Out]#        [5.5, 2.3, 4. , 1.3],
#[Out]#        [6.5, 2.8, 4.6, 1.5],
#[Out]#        [5.7, 2.8, 4.5, 1.3],
#[Out]#        [6.3, 3.3, 4.7, 1.6],
#[Out]#        [4.9, 2.4, 3.3, 1. ],
#[Out]#        [6.6, 2.9, 4.6, 1.3],
#[Out]#        [5.2, 2.7, 3.9, 1.4],
#[Out]#        [5. , 2. , 3.5, 1. ],
#[Out]#        [5.9, 3. , 4.2, 1.5],
#[Out]#        [6. , 2.2, 4. , 1. ],
#[Out]#        [6.1, 2.9, 4.7, 1.4],
#[Out]#        [5.6, 2.9, 3.6, 1.3],
#[Out]#        [6.7, 3.1, 4.4, 1.4],
#[Out]#        [5.6, 3. , 4.5, 1.5],
#[Out]#        [5.8, 2.7, 4.1, 1. ],
#[Out]#        [6.2, 2.2, 4.5, 1.5],
#[Out]#        [5.6, 2.5, 3.9, 1.1],
#[Out]#        [5.9, 3.2, 4.8, 1.8],
#[Out]#        [6.1, 2.8, 4. , 1.3],
#[Out]#        [6.3, 2.5, 4.9, 1.5],
#[Out]#        [6.1, 2.8, 4.7, 1.2],
#[Out]#        [6.4, 2.9, 4.3, 1.3],
#[Out]#        [6.6, 3. , 4.4, 1.4],
#[Out]#        [6.8, 2.8, 4.8, 1.4],
#[Out]#        [6.7, 3. , 5. , 1.7],
#[Out]#        [6. , 2.9, 4.5, 1.5],
#[Out]#        [5.7, 2.6, 3.5, 1. ],
#[Out]#        [5.5, 2.4, 3.8, 1.1],
#[Out]#        [5.5, 2.4, 3.7, 1. ],
#[Out]#        [5.8, 2.7, 3.9, 1.2],
#[Out]#        [6. , 2.7, 5.1, 1.6],
#[Out]#        [5.4, 3. , 4.5, 1.5],
#[Out]#        [6. , 3.4, 4.5, 1.6],
#[Out]#        [6.7, 3.1, 4.7, 1.5],
#[Out]#        [6.3, 2.3, 4.4, 1.3],
#[Out]#        [5.6, 3. , 4.1, 1.3],
#[Out]#        [5.5, 2.5, 4. , 1.3],
#[Out]#        [5.5, 2.6, 4.4, 1.2],
#[Out]#        [6.1, 3. , 4.6, 1.4],
#[Out]#        [5.8, 2.6, 4. , 1.2],
#[Out]#        [5. , 2.3, 3.3, 1. ],
#[Out]#        [5.6, 2.7, 4.2, 1.3],
#[Out]#        [5.7, 3. , 4.2, 1.2],
#[Out]#        [5.7, 2.9, 4.2, 1.3],
#[Out]#        [6.2, 2.9, 4.3, 1.3],
#[Out]#        [5.1, 2.5, 3. , 1.1],
#[Out]#        [5.7, 2.8, 4.1, 1.3],
#[Out]#        [6.3, 3.3, 6. , 2.5],
#[Out]#        [5.8, 2.7, 5.1, 1.9],
#[Out]#        [7.1, 3. , 5.9, 2.1],
#[Out]#        [6.3, 2.9, 5.6, 1.8],
#[Out]#        [6.5, 3. , 5.8, 2.2],
#[Out]#        [7.6, 3. , 6.6, 2.1],
#[Out]#        [4.9, 2.5, 4.5, 1.7],
#[Out]#        [7.3, 2.9, 6.3, 1.8],
#[Out]#        [6.7, 2.5, 5.8, 1.8],
#[Out]#        [7.2, 3.6, 6.1, 2.5],
#[Out]#        [6.5, 3.2, 5.1, 2. ],
#[Out]#        [6.4, 2.7, 5.3, 1.9],
#[Out]#        [6.8, 3. , 5.5, 2.1],
#[Out]#        [5.7, 2.5, 5. , 2. ],
#[Out]#        [5.8, 2.8, 5.1, 2.4],
#[Out]#        [6.4, 3.2, 5.3, 2.3],
#[Out]#        [6.5, 3. , 5.5, 1.8],
#[Out]#        [7.7, 3.8, 6.7, 2.2],
#[Out]#        [7.7, 2.6, 6.9, 2.3],
#[Out]#        [6. , 2.2, 5. , 1.5],
#[Out]#        [6.9, 3.2, 5.7, 2.3],
#[Out]#        [5.6, 2.8, 4.9, 2. ],
#[Out]#        [7.7, 2.8, 6.7, 2. ],
#[Out]#        [6.3, 2.7, 4.9, 1.8],
#[Out]#        [6.7, 3.3, 5.7, 2.1],
#[Out]#        [7.2, 3.2, 6. , 1.8],
#[Out]#        [6.2, 2.8, 4.8, 1.8],
#[Out]#        [6.1, 3. , 4.9, 1.8],
#[Out]#        [6.4, 2.8, 5.6, 2.1],
#[Out]#        [7.2, 3. , 5.8, 1.6],
#[Out]#        [7.4, 2.8, 6.1, 1.9],
#[Out]#        [7.9, 3.8, 6.4, 2. ],
#[Out]#        [6.4, 2.8, 5.6, 2.2],
#[Out]#        [6.3, 2.8, 5.1, 1.5],
#[Out]#        [6.1, 2.6, 5.6, 1.4],
#[Out]#        [7.7, 3. , 6.1, 2.3],
#[Out]#        [6.3, 3.4, 5.6, 2.4],
#[Out]#        [6.4, 3.1, 5.5, 1.8],
#[Out]#        [6. , 3. , 4.8, 1.8],
#[Out]#        [6.9, 3.1, 5.4, 2.1],
#[Out]#        [6.7, 3.1, 5.6, 2.4],
#[Out]#        [6.9, 3.1, 5.1, 2.3],
#[Out]#        [5.8, 2.7, 5.1, 1.9],
#[Out]#        [6.8, 3.2, 5.9, 2.3],
#[Out]#        [6.7, 3.3, 5.7, 2.5],
#[Out]#        [6.7, 3. , 5.2, 2.3],
#[Out]#        [6.3, 2.5, 5. , 1.9],
#[Out]#        [6.5, 3. , 5.2, 2. ],
#[Out]#        [6.2, 3.4, 5.4, 2.3],
#[Out]#        [5.9, 3. , 5.1, 1.8]])
npx = dfx.as_matrix()
npy = dfy.as_matrix()
cross_val_score(model,dfx,dfy,cv=5)
from sklearn.cross_validation import LeaveOneOut
scores = cross_val_score(model,dfx,dfy,cv=LeaveOneOut(len(x)))
scores
#[Out]# array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
#[Out]#        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
#[Out]#        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
#[Out]#        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
#[Out]#        1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
#[Out]#        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
#[Out]#        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
#[Out]#        0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
#[Out]#        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
cross_val_score(model,dfx,dfy,cv=5)
scores.mean()
#[Out]# 0.96
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.pipeline import make_pipeline
def PolynomialRegression(degree=2,**kwargs):
    retrun make_pipeline(PolynomialFeatures(degree),LinearRegression(**kwargs))
def PolynomialRegression(degree=2,**kwargs):
    return make_pipeline(PolynomialFeatures(degree),LinearRegression(**kwargs))
import numpy as np
def make_data(N,err=1.0,rseed=1):
    rng = np.random.RandomState(rseed）
def make_data(N,err=1.0,rseed=1):
    rng = np.random.RandomState(rseed)
    x = rng.rand(N,1) ** 2
    y = 10 - 1./(x.ravel() + 0.1)
    if err>0:
        y += err * rng.randn(N)
    return x,y
rng = np.random.RandomState(1)
rng.rand(100,1)
#[Out]# array([[4.17022005e-01],
#[Out]#        [7.20324493e-01],
#[Out]#        [1.14374817e-04],
#[Out]#        [3.02332573e-01],
#[Out]#        [1.46755891e-01],
#[Out]#        [9.23385948e-02],
#[Out]#        [1.86260211e-01],
#[Out]#        [3.45560727e-01],
#[Out]#        [3.96767474e-01],
#[Out]#        [5.38816734e-01],
#[Out]#        [4.19194514e-01],
#[Out]#        [6.85219500e-01],
#[Out]#        [2.04452250e-01],
#[Out]#        [8.78117436e-01],
#[Out]#        [2.73875932e-02],
#[Out]#        [6.70467510e-01],
#[Out]#        [4.17304802e-01],
#[Out]#        [5.58689828e-01],
#[Out]#        [1.40386939e-01],
#[Out]#        [1.98101489e-01],
#[Out]#        [8.00744569e-01],
#[Out]#        [9.68261576e-01],
#[Out]#        [3.13424178e-01],
#[Out]#        [6.92322616e-01],
#[Out]#        [8.76389152e-01],
#[Out]#        [8.94606664e-01],
#[Out]#        [8.50442114e-02],
#[Out]#        [3.90547832e-02],
#[Out]#        [1.69830420e-01],
#[Out]#        [8.78142503e-01],
#[Out]#        [9.83468338e-02],
#[Out]#        [4.21107625e-01],
#[Out]#        [9.57889530e-01],
#[Out]#        [5.33165285e-01],
#[Out]#        [6.91877114e-01],
#[Out]#        [3.15515631e-01],
#[Out]#        [6.86500928e-01],
#[Out]#        [8.34625672e-01],
#[Out]#        [1.82882773e-02],
#[Out]#        [7.50144315e-01],
#[Out]#        [9.88861089e-01],
#[Out]#        [7.48165654e-01],
#[Out]#        [2.80443992e-01],
#[Out]#        [7.89279328e-01],
#[Out]#        [1.03226007e-01],
#[Out]#        [4.47893526e-01],
#[Out]#        [9.08595503e-01],
#[Out]#        [2.93614148e-01],
#[Out]#        [2.87775339e-01],
#[Out]#        [1.30028572e-01],
#[Out]#        [1.93669579e-02],
#[Out]#        [6.78835533e-01],
#[Out]#        [2.11628116e-01],
#[Out]#        [2.65546659e-01],
#[Out]#        [4.91573159e-01],
#[Out]#        [5.33625451e-02],
#[Out]#        [5.74117605e-01],
#[Out]#        [1.46728575e-01],
#[Out]#        [5.89305537e-01],
#[Out]#        [6.99758360e-01],
#[Out]#        [1.02334429e-01],
#[Out]#        [4.14055988e-01],
#[Out]#        [6.94400158e-01],
#[Out]#        [4.14179270e-01],
#[Out]#        [4.99534589e-02],
#[Out]#        [5.35896406e-01],
#[Out]#        [6.63794645e-01],
#[Out]#        [5.14889112e-01],
#[Out]#        [9.44594756e-01],
#[Out]#        [5.86555041e-01],
#[Out]#        [9.03401915e-01],
#[Out]#        [1.37474704e-01],
#[Out]#        [1.39276347e-01],
#[Out]#        [8.07391289e-01],
#[Out]#        [3.97676837e-01],
#[Out]#        [1.65354197e-01],
#[Out]#        [9.27508580e-01],
#[Out]#        [3.47765860e-01],
#[Out]#        [7.50812103e-01],
#[Out]#        [7.25997985e-01],
#[Out]#        [8.83306091e-01],
#[Out]#        [6.23672207e-01],
#[Out]#        [7.50942434e-01],
#[Out]#        [3.48898342e-01],
#[Out]#        [2.69927892e-01],
#[Out]#        [8.95886218e-01],
#[Out]#        [4.28091190e-01],
#[Out]#        [9.64840047e-01],
#[Out]#        [6.63441498e-01],
#[Out]#        [6.21695720e-01],
#[Out]#        [1.14745973e-01],
#[Out]#        [9.49489259e-01],
#[Out]#        [4.49912133e-01],
#[Out]#        [5.78389614e-01],
#[Out]#        [4.08136803e-01],
#[Out]#        [2.37026980e-01],
#[Out]#        [9.03379521e-01],
#[Out]#        [5.73679487e-01],
#[Out]#        [2.87032703e-03],
#[Out]#        [6.17144914e-01]])
rng.rand(100,1) ** 2
#[Out]# array([[1.06696892e-01],
#[Out]#        [2.77790243e-01],
#[Out]#        [7.84893403e-01],
#[Out]#        [1.27641681e-01],
#[Out]#        [8.25436120e-01],
#[Out]#        [3.88577834e-01],
#[Out]#        [2.50311725e-04],
#[Out]#        [8.63853571e-01],
#[Out]#        [4.77338551e-01],
#[Out]#        [9.94652868e-01],
#[Out]#        [2.97012508e-02],
#[Out]#        [1.88062138e-02],
#[Out]#        [8.69734298e-01],
#[Out]#        [4.85555550e-01],
#[Out]#        [4.35602280e-03],
#[Out]#        [5.70724424e-01],
#[Out]#        [5.68329308e-01],
#[Out]#        [8.51974293e-01],
#[Out]#        [5.06267482e-01],
#[Out]#        [1.54432720e-02],
#[Out]#        [3.95219721e-04],
#[Out]#        [6.87015833e-04],
#[Out]#        [8.01257264e-04],
#[Out]#        [6.06198898e-02],
#[Out]#        [7.39648073e-01],
#[Out]#        [2.90338916e-01],
#[Out]#        [3.05612140e-01],
#[Out]#        [7.09016024e-01],
#[Out]#        [1.54190122e-02],
#[Out]#        [7.79435266e-02],
#[Out]#        [3.43113924e-01],
#[Out]#        [9.40115915e-01],
#[Out]#        [3.14754907e-01],
#[Out]#        [3.47721401e-04],
#[Out]#        [6.41012677e-01],
#[Out]#        [5.42770123e-02],
#[Out]#        [6.51418797e-01],
#[Out]#        [1.50435879e-01],
#[Out]#        [7.45704535e-01],
#[Out]#        [5.58190749e-01],
#[Out]#        [3.09403198e-01],
#[Out]#        [1.86200286e-02],
#[Out]#        [3.59012952e-03],
#[Out]#        [1.47242343e-02],
#[Out]#        [1.98486988e-03],
#[Out]#        [1.15549878e-02],
#[Out]#        [5.09447055e-02],
#[Out]#        [5.08353286e-01],
#[Out]#        [3.13283100e-01],
#[Out]#        [1.57652638e-04],
#[Out]#        [5.18029694e-03],
#[Out]#        [9.35623499e-01],
#[Out]#        [3.22738135e-01],
#[Out]#        [4.13281393e-02],
#[Out]#        [6.36682814e-02],
#[Out]#        [5.53276901e-01],
#[Out]#        [3.81926821e-02],
#[Out]#        [3.37978202e-01],
#[Out]#        [9.40938779e-01],
#[Out]#        [7.17119019e-01],
#[Out]#        [5.75269476e-02],
#[Out]#        [2.43808531e-01],
#[Out]#        [3.84345093e-01],
#[Out]#        [6.87209332e-01],
#[Out]#        [2.45835414e-02],
#[Out]#        [3.45075287e-04],
#[Out]#        [4.90310061e-03],
#[Out]#        [2.36531567e-01],
#[Out]#        [3.67635416e-01],
#[Out]#        [3.23591957e-01],
#[Out]#        [1.00718899e-01],
#[Out]#        [9.77361901e-01],
#[Out]#        [3.36104519e-01],
#[Out]#        [1.44507311e-01],
#[Out]#        [3.03543940e-01],
#[Out]#        [5.55523414e-01],
#[Out]#        [4.47872666e-01],
#[Out]#        [7.01823720e-02],
#[Out]#        [4.40031026e-03],
#[Out]#        [1.36962314e-01],
#[Out]#        [3.96544139e-01],
#[Out]#        [4.41731144e-02],
#[Out]#        [5.66640924e-01],
#[Out]#        [4.42710335e-03],
#[Out]#        [6.77639505e-02],
#[Out]#        [6.47629908e-01],
#[Out]#        [3.74168217e-02],
#[Out]#        [4.08910218e-01],
#[Out]#        [2.75278933e-01],
#[Out]#        [8.55269782e-01],
#[Out]#        [6.93251893e-02],
#[Out]#        [4.35086548e-03],
#[Out]#        [5.40321970e-01],
#[Out]#        [5.96258909e-01],
#[Out]#        [8.24129622e-01],
#[Out]#        [8.68571938e-01],
#[Out]#        [1.94646388e-04],
#[Out]#        [5.49255874e-02],
#[Out]#        [3.80415542e-01],
#[Out]#        [9.00631977e-01]])
x.ravel()
#[Out]# array([5.1, 3.5, 1.4, 0.2, 4.9, 3. , 1.4, 0.2, 4.7, 3.2, 1.3, 0.2, 4.6,
#[Out]#        3.1, 1.5, 0.2, 5. , 3.6, 1.4, 0.2, 5.4, 3.9, 1.7, 0.4, 4.6, 3.4,
#[Out]#        1.4, 0.3, 5. , 3.4, 1.5, 0.2, 4.4, 2.9, 1.4, 0.2, 4.9, 3.1, 1.5,
#[Out]#        0.1, 5.4, 3.7, 1.5, 0.2, 4.8, 3.4, 1.6, 0.2, 4.8, 3. , 1.4, 0.1,
#[Out]#        4.3, 3. , 1.1, 0.1, 5.8, 4. , 1.2, 0.2, 5.7, 4.4, 1.5, 0.4, 5.4,
#[Out]#        3.9, 1.3, 0.4, 5.1, 3.5, 1.4, 0.3, 5.7, 3.8, 1.7, 0.3, 5.1, 3.8,
#[Out]#        1.5, 0.3, 5.4, 3.4, 1.7, 0.2, 5.1, 3.7, 1.5, 0.4, 4.6, 3.6, 1. ,
#[Out]#        0.2, 5.1, 3.3, 1.7, 0.5, 4.8, 3.4, 1.9, 0.2, 5. , 3. , 1.6, 0.2,
#[Out]#        5. , 3.4, 1.6, 0.4, 5.2, 3.5, 1.5, 0.2, 5.2, 3.4, 1.4, 0.2, 4.7,
#[Out]#        3.2, 1.6, 0.2, 4.8, 3.1, 1.6, 0.2, 5.4, 3.4, 1.5, 0.4, 5.2, 4.1,
#[Out]#        1.5, 0.1, 5.5, 4.2, 1.4, 0.2, 4.9, 3.1, 1.5, 0.1, 5. , 3.2, 1.2,
#[Out]#        0.2, 5.5, 3.5, 1.3, 0.2, 4.9, 3.1, 1.5, 0.1, 4.4, 3. , 1.3, 0.2,
#[Out]#        5.1, 3.4, 1.5, 0.2, 5. , 3.5, 1.3, 0.3, 4.5, 2.3, 1.3, 0.3, 4.4,
#[Out]#        3.2, 1.3, 0.2, 5. , 3.5, 1.6, 0.6, 5.1, 3.8, 1.9, 0.4, 4.8, 3. ,
#[Out]#        1.4, 0.3, 5.1, 3.8, 1.6, 0.2, 4.6, 3.2, 1.4, 0.2, 5.3, 3.7, 1.5,
#[Out]#        0.2, 5. , 3.3, 1.4, 0.2, 7. , 3.2, 4.7, 1.4, 6.4, 3.2, 4.5, 1.5,
#[Out]#        6.9, 3.1, 4.9, 1.5, 5.5, 2.3, 4. , 1.3, 6.5, 2.8, 4.6, 1.5, 5.7,
#[Out]#        2.8, 4.5, 1.3, 6.3, 3.3, 4.7, 1.6, 4.9, 2.4, 3.3, 1. , 6.6, 2.9,
#[Out]#        4.6, 1.3, 5.2, 2.7, 3.9, 1.4, 5. , 2. , 3.5, 1. , 5.9, 3. , 4.2,
#[Out]#        1.5, 6. , 2.2, 4. , 1. , 6.1, 2.9, 4.7, 1.4, 5.6, 2.9, 3.6, 1.3,
#[Out]#        6.7, 3.1, 4.4, 1.4, 5.6, 3. , 4.5, 1.5, 5.8, 2.7, 4.1, 1. , 6.2,
#[Out]#        2.2, 4.5, 1.5, 5.6, 2.5, 3.9, 1.1, 5.9, 3.2, 4.8, 1.8, 6.1, 2.8,
#[Out]#        4. , 1.3, 6.3, 2.5, 4.9, 1.5, 6.1, 2.8, 4.7, 1.2, 6.4, 2.9, 4.3,
#[Out]#        1.3, 6.6, 3. , 4.4, 1.4, 6.8, 2.8, 4.8, 1.4, 6.7, 3. , 5. , 1.7,
#[Out]#        6. , 2.9, 4.5, 1.5, 5.7, 2.6, 3.5, 1. , 5.5, 2.4, 3.8, 1.1, 5.5,
#[Out]#        2.4, 3.7, 1. , 5.8, 2.7, 3.9, 1.2, 6. , 2.7, 5.1, 1.6, 5.4, 3. ,
#[Out]#        4.5, 1.5, 6. , 3.4, 4.5, 1.6, 6.7, 3.1, 4.7, 1.5, 6.3, 2.3, 4.4,
#[Out]#        1.3, 5.6, 3. , 4.1, 1.3, 5.5, 2.5, 4. , 1.3, 5.5, 2.6, 4.4, 1.2,
#[Out]#        6.1, 3. , 4.6, 1.4, 5.8, 2.6, 4. , 1.2, 5. , 2.3, 3.3, 1. , 5.6,
#[Out]#        2.7, 4.2, 1.3, 5.7, 3. , 4.2, 1.2, 5.7, 2.9, 4.2, 1.3, 6.2, 2.9,
#[Out]#        4.3, 1.3, 5.1, 2.5, 3. , 1.1, 5.7, 2.8, 4.1, 1.3, 6.3, 3.3, 6. ,
#[Out]#        2.5, 5.8, 2.7, 5.1, 1.9, 7.1, 3. , 5.9, 2.1, 6.3, 2.9, 5.6, 1.8,
#[Out]#        6.5, 3. , 5.8, 2.2, 7.6, 3. , 6.6, 2.1, 4.9, 2.5, 4.5, 1.7, 7.3,
#[Out]#        2.9, 6.3, 1.8, 6.7, 2.5, 5.8, 1.8, 7.2, 3.6, 6.1, 2.5, 6.5, 3.2,
#[Out]#        5.1, 2. , 6.4, 2.7, 5.3, 1.9, 6.8, 3. , 5.5, 2.1, 5.7, 2.5, 5. ,
#[Out]#        2. , 5.8, 2.8, 5.1, 2.4, 6.4, 3.2, 5.3, 2.3, 6.5, 3. , 5.5, 1.8,
#[Out]#        7.7, 3.8, 6.7, 2.2, 7.7, 2.6, 6.9, 2.3, 6. , 2.2, 5. , 1.5, 6.9,
#[Out]#        3.2, 5.7, 2.3, 5.6, 2.8, 4.9, 2. , 7.7, 2.8, 6.7, 2. , 6.3, 2.7,
#[Out]#        4.9, 1.8, 6.7, 3.3, 5.7, 2.1, 7.2, 3.2, 6. , 1.8, 6.2, 2.8, 4.8,
#[Out]#        1.8, 6.1, 3. , 4.9, 1.8, 6.4, 2.8, 5.6, 2.1, 7.2, 3. , 5.8, 1.6,
#[Out]#        7.4, 2.8, 6.1, 1.9, 7.9, 3.8, 6.4, 2. , 6.4, 2.8, 5.6, 2.2, 6.3,
#[Out]#        2.8, 5.1, 1.5, 6.1, 2.6, 5.6, 1.4, 7.7, 3. , 6.1, 2.3, 6.3, 3.4,
#[Out]#        5.6, 2.4, 6.4, 3.1, 5.5, 1.8, 6. , 3. , 4.8, 1.8, 6.9, 3.1, 5.4,
#[Out]#        2.1, 6.7, 3.1, 5.6, 2.4, 6.9, 3.1, 5.1, 2.3, 5.8, 2.7, 5.1, 1.9,
#[Out]#        6.8, 3.2, 5.9, 2.3, 6.7, 3.3, 5.7, 2.5, 6.7, 3. , 5.2, 2.3, 6.3,
#[Out]#        2.5, 5. , 1.9, 6.5, 3. , 5.2, 2. , 6.2, 3.4, 5.4, 2.3, 5.9, 3. ,
#[Out]#        5.1, 1.8])
(rng.rand(100,1) ** 2).ravel()
#[Out]# array([9.02834658e-01, 3.09862772e-01, 8.38334988e-01, 4.11607200e-01,
#[Out]#        1.52106017e-01, 2.36186929e-01, 3.65191160e-01, 3.02002918e-01,
#[Out]#        8.57812035e-01, 8.44071126e-01, 1.55926750e-01, 9.27874699e-01,
#[Out]#        3.02605740e-02, 1.59591475e-02, 1.82463789e-02, 2.55694226e-01,
#[Out]#        4.63317242e-04, 8.98647521e-01, 6.84120003e-01, 2.25569783e-04,
#[Out]#        3.10451205e-02, 1.10266217e-01, 1.71601734e-02, 6.55275181e-01,
#[Out]#        1.18843360e-01, 8.83802078e-01, 3.38740506e-01, 7.72345657e-01,
#[Out]#        7.13576283e-01, 8.19735251e-01, 2.11489859e-01, 2.98494843e-01,
#[Out]#        6.37767696e-01, 8.16352622e-02, 2.40348516e-01, 3.58933161e-01,
#[Out]#        2.41282649e-04, 3.52220182e-01, 1.88075176e-01, 6.51831024e-01,
#[Out]#        9.93792859e-02, 7.97250246e-01, 3.33918961e-01, 3.38597543e-02,
#[Out]#        6.20832478e-01, 3.74582162e-01, 2.90620962e-03, 1.76562729e-01,
#[Out]#        4.61134485e-01, 8.43829227e-01, 1.61624013e-07, 9.54058435e-01,
#[Out]#        1.41812733e-01, 9.48254380e-01, 3.65681563e-01, 6.86985373e-01,
#[Out]#        3.30293314e-01, 3.94479711e-01, 8.15538127e-02, 3.44373370e-01,
#[Out]#        5.62532646e-01, 7.36702642e-01, 5.70149111e-01, 4.87283922e-01,
#[Out]#        7.47324685e-01, 1.04123026e-01, 4.49957602e-01, 2.03287307e-01,
#[Out]#        1.46002513e-01, 1.68765965e-01, 1.61185856e-01, 1.00732569e-01,
#[Out]#        3.86783700e-01, 1.85112714e-01, 9.48290487e-01, 4.59414048e-01,
#[Out]#        3.94300006e-02, 1.82073751e-01, 1.17886640e-01, 6.36227662e-01,
#[Out]#        7.74396988e-01, 8.16930281e-01, 4.39197550e-01, 7.30125049e-02,
#[Out]#        6.36889520e-02, 7.30850492e-01, 2.78482748e-01, 6.43462405e-01,
#[Out]#        3.27743102e-01, 5.37497962e-01, 2.69373069e-01, 5.94262003e-01,
#[Out]#        3.23599414e-01, 2.16885691e-01, 1.17435688e-01, 4.65251521e-03,
#[Out]#        1.42826685e-01, 6.34031225e-03, 9.65929479e-01, 3.29832278e-02])
(rng.rand(100,1) ** 2).ravel() + 0.1
#[Out]# array([0.75911455, 0.86555788, 0.57391281, 0.42432389, 0.1259118 ,
#[Out]#        0.31797696, 0.21914374, 0.15064298, 0.45107031, 0.19751245,
#[Out]#        0.93961587, 0.92743679, 0.16610982, 0.11229688, 0.13723462,
#[Out]#        0.34958434, 0.63083708, 0.14334492, 0.16152065, 0.82534498,
#[Out]#        0.27293016, 0.48030047, 0.15459986, 0.11039732, 0.36610846,
#[Out]#        0.32766352, 0.12330863, 0.48664299, 0.39594701, 0.52789567,
#[Out]#        0.12089341, 0.66479406, 0.14930582, 0.36972632, 0.71668985,
#[Out]#        0.10049865, 0.20521101, 0.86199348, 0.81353432, 0.38991827,
#[Out]#        0.8510099 , 1.00213142, 0.78294853, 0.82951319, 0.10975026,
#[Out]#        0.52419733, 0.59493615, 0.47239385, 0.73938457, 0.10119517,
#[Out]#        0.69326771, 0.63542675, 0.16744326, 0.16608462, 0.49980749,
#[Out]#        0.21923034, 0.73455352, 0.29904646, 0.71269665, 1.08103435,
#[Out]#        0.19014907, 0.12045067, 0.9123569 , 0.39328656, 1.05011879,
#[Out]#        0.50526516, 1.0878631 , 0.39819332, 0.37712426, 0.11834072,
#[Out]#        0.22652617, 0.10068741, 0.12572661, 0.65597482, 0.10092414,
#[Out]#        0.23435384, 0.84364106, 0.57980242, 0.57740104, 0.13558384,
#[Out]#        0.29527939, 0.43823228, 1.07960844, 0.14157775, 0.16137159,
#[Out]#        0.16873473, 0.66275865, 0.30882645, 0.10324096, 0.35858877,
#[Out]#        0.14492711, 0.73776874, 0.18840595, 0.10076209, 0.45216207,
#[Out]#        0.81206667, 0.24517329, 0.66228749, 0.36126561, 0.39262886])
1/(rng.rand(100,1) ** 2).ravel() + 0.1
#[Out]# array([1.18634933e+00, 1.64714192e+00, 9.57238719e+02, 2.08716185e+00,
#[Out]#        4.72478265e+00, 1.21377303e+00, 2.04946546e+01, 1.41198452e+01,
#[Out]#        1.50747628e+02, 5.54324033e+00, 8.42390283e+01, 2.58950885e+00,
#[Out]#        1.65098885e+00, 2.15960102e+00, 1.80334572e+00, 8.62697931e+00,
#[Out]#        1.49769293e+00, 5.53943384e+00, 1.57277082e+00, 2.64778734e+00,
#[Out]#        4.87140832e+01, 1.62847012e+02, 2.97553071e+03, 2.24706782e+02,
#[Out]#        4.85513177e+00, 7.79428715e+01, 1.29558031e+03, 1.85495292e+00,
#[Out]#        6.51408422e+00, 1.89238093e+00, 4.98591087e+00, 5.03636824e+00,
#[Out]#        4.47534660e+00, 4.55077993e+00, 1.65021610e+00, 6.27589924e+00,
#[Out]#        1.32181121e+00, 7.28155705e+02, 1.76977942e+00, 6.34482463e+01,
#[Out]#        2.71397566e+00, 9.30953426e+03, 3.54685731e+00, 1.09792939e+05,
#[Out]#        1.20525374e+00, 1.31987988e+00, 1.67837407e+00, 1.29370619e+00,
#[Out]#        4.72983114e+01, 4.02949052e+01, 2.85045360e+01, 2.68063751e+00,
#[Out]#        1.31878265e+00, 1.12039644e+00, 2.07747595e+00, 1.96730261e+00,
#[Out]#        1.30946167e+00, 6.32278507e+00, 1.61191301e+01, 3.33468647e+01,
#[Out]#        7.01771493e+01, 1.61438063e+00, 4.65080174e+01, 1.44157448e+01,
#[Out]#        1.59051937e+00, 1.04665142e+01, 1.13611477e+00, 1.41654498e+01,
#[Out]#        3.61140989e+00, 1.02122969e+01, 1.30553512e+00, 7.54248227e+00,
#[Out]#        5.41908368e+00, 3.91033955e+00, 1.23441989e+00, 1.04411462e+03,
#[Out]#        2.04584701e+00, 1.35958104e+00, 1.34311636e+03, 3.76921977e+00,
#[Out]#        9.51005032e+00, 1.45368941e+00, 3.30573711e+00, 2.19901248e+00,
#[Out]#        4.97623405e+00, 2.63310614e+00, 1.19826682e+01, 1.14422831e+04,
#[Out]#        3.10618605e+00, 1.04095442e+01, 3.83739887e+00, 1.29076015e+00,
#[Out]#        5.59810811e+00, 1.64385881e+01, 7.35378528e+00, 1.25158929e+00,
#[Out]#        1.23931243e+00, 1.50273493e+00, 1.28094424e+00, 1.93535246e+01])
10-1/(rng.rand(100,1) ** 2).ravel() + 0.1
#[Out]# array([-1.20565373e+02, -9.25369639e+00, -1.81131095e-02, -2.26406066e+01,
#[Out]#         7.38676203e+00,  4.25388344e+00,  8.59946684e+00, -1.90772616e+01,
#[Out]#         8.07008170e+00, -7.20977489e+00,  7.06719318e+00,  1.88930321e+00,
#[Out]#        -2.98071841e+02, -9.00011854e+00,  7.83259188e+00,  6.05563584e+00,
#[Out]#         6.38773873e+00, -2.26577460e+01,  7.02984622e+00,  9.09347509e+00,
#[Out]#         8.60124306e+00,  7.26937457e+00,  9.05019148e+00,  8.86970789e+00,
#[Out]#         7.28110401e+00, -9.40952582e+02, -1.04098625e+02, -2.23902363e+02,
#[Out]#         5.19954869e+00,  3.00535170e+00,  9.04881539e+00, -2.53378869e+01,
#[Out]#         9.04327020e+00,  8.40225808e+00,  8.62804375e+00,  7.60126668e+00,
#[Out]#         7.86388163e+00,  5.70278671e+00, -5.78485570e+03,  2.07517417e+00,
#[Out]#         5.97006664e+00,  8.22394417e+00,  5.54652562e+00,  5.32032526e+00,
#[Out]#        -4.26675798e+01, -8.42412609e+03,  8.36082698e+00,  3.31495828e-01,
#[Out]#         9.06801973e+00, -1.05172328e+01,  1.38336169e+00,  6.45657688e+00,
#[Out]#         8.34518645e+00,  5.45238331e+00, -5.40821035e+01, -1.39909660e-01,
#[Out]#         6.17133810e+00,  7.89770845e+00,  8.41403168e+00, -4.87671056e+01,
#[Out]#        -1.89428740e+03,  6.38868752e+00,  8.57579961e+00, -6.28495119e+03,
#[Out]#         7.88866586e+00,  7.98003338e+00,  5.14515464e+00,  8.90502607e+00,
#[Out]#         7.69152916e+00, -3.64119459e+04,  5.83871358e+00,  8.74577016e+00,
#[Out]#         8.64980712e+00,  7.72696436e+00,  7.89672383e+00,  7.11190842e+00,
#[Out]#        -3.20819838e+00,  6.91725172e+00,  7.88379062e+00,  2.04890091e+00,
#[Out]#         8.73470454e+00, -1.61883797e+01,  8.30945249e+00, -1.82324995e+00,
#[Out]#         8.42989664e+00,  4.63430123e+00,  8.56714334e+00,  2.09916146e+00,
#[Out]#        -1.17987054e+01,  8.40141556e+00, -3.97601883e-01,  8.24004816e+00,
#[Out]#         8.29572838e+00, -1.03012938e+01, -1.17131019e+01, -1.51651092e+01,
#[Out]#        -3.91332497e+01,  3.06722026e+00, -1.40024923e+03, -7.11788197e+01])
x,y = make_data(40)
x,y
#[Out]# (array([[1.73907352e-01],
#[Out]#         [5.18867376e-01],
#[Out]#         [1.30815988e-08],
#[Out]#         [9.14049845e-02],
#[Out]#         [2.15372915e-02],
#[Out]#         [8.52641608e-03],
#[Out]#         [3.46928663e-02],
#[Out]#         [1.19412216e-01],
#[Out]#         [1.57424429e-01],
#[Out]#         [2.90323473e-01],
#[Out]#         [1.75724041e-01],
#[Out]#         [4.69525764e-01],
#[Out]#         [4.18007224e-02],
#[Out]#         [7.71090232e-01],
#[Out]#         [7.50080261e-04],
#[Out]#         [4.49526682e-01],
#[Out]#         [1.74143298e-01],
#[Out]#         [3.12134324e-01],
#[Out]#         [1.97084925e-02],
#[Out]#         [3.92442000e-02],
#[Out]#         [6.41191864e-01],
#[Out]#         [9.37530479e-01],
#[Out]#         [9.82347155e-02],
#[Out]#         [4.79310604e-01],
#[Out]#         [7.68057946e-01],
#[Out]#         [8.00321082e-01],
#[Out]#         [7.23251789e-03],
#[Out]#         [1.52527609e-03],
#[Out]#         [2.88423714e-02],
#[Out]#         [7.71134256e-01],
#[Out]#         [9.67209972e-03],
#[Out]#         [1.77331632e-01],
#[Out]#         [9.17552352e-01],
#[Out]#         [2.84265221e-01],
#[Out]#         [4.78693941e-01],
#[Out]#         [9.95501134e-02],
#[Out]#         [4.71283524e-01],
#[Out]#         [6.96600012e-01],
#[Out]#         [3.34461088e-04],
#[Out]#         [5.62716493e-01]]),
#[Out]#  array([ 7.24998644,  7.70041705, -0.12288892,  3.83970623,  1.50418461,
#[Out]#          1.31600899,  1.88404109,  5.0456151 ,  5.42819209,  6.59281674,
#[Out]#          5.70193919,  8.23148858,  1.8305394 ,  9.086429  ,  1.73425177,
#[Out]#          8.92229631,  6.16043712,  6.68597765,  0.8992155 ,  4.51082693,
#[Out]#          8.70162943,  8.39917725,  5.14639037, 10.37406543,  8.96816213,
#[Out]#          9.50648826,  0.9746409 , -0.20201375,  1.09605993,  8.50272859,
#[Out]#          0.67301646,  6.98083184,  9.856233  ,  8.32873282,  8.55755817,
#[Out]#          5.87386864,  7.49515774,  9.997533  ,  0.54626444,  8.1929663 ]))
x.shape
#[Out]# (40, 1)
y.shape
#[Out]# (40,)
import matplotlib.pyplot as plt
import seaborn;seaborn.set()
x_test = np.linspace(-0.1,1.1,500)
x_test.shape
#[Out]# (500,)
x_test = x_test[:,None]
x_test
#[Out]# array([[-1.00000000e-01],
#[Out]#        [-9.75951904e-02],
#[Out]#        [-9.51903808e-02],
#[Out]#        [-9.27855711e-02],
#[Out]#        [-9.03807615e-02],
#[Out]#        [-8.79759519e-02],
#[Out]#        [-8.55711423e-02],
#[Out]#        [-8.31663327e-02],
#[Out]#        [-8.07615230e-02],
#[Out]#        [-7.83567134e-02],
#[Out]#        [-7.59519038e-02],
#[Out]#        [-7.35470942e-02],
#[Out]#        [-7.11422846e-02],
#[Out]#        [-6.87374749e-02],
#[Out]#        [-6.63326653e-02],
#[Out]#        [-6.39278557e-02],
#[Out]#        [-6.15230461e-02],
#[Out]#        [-5.91182365e-02],
#[Out]#        [-5.67134269e-02],
#[Out]#        [-5.43086172e-02],
#[Out]#        [-5.19038076e-02],
#[Out]#        [-4.94989980e-02],
#[Out]#        [-4.70941884e-02],
#[Out]#        [-4.46893788e-02],
#[Out]#        [-4.22845691e-02],
#[Out]#        [-3.98797595e-02],
#[Out]#        [-3.74749499e-02],
#[Out]#        [-3.50701403e-02],
#[Out]#        [-3.26653307e-02],
#[Out]#        [-3.02605210e-02],
#[Out]#        [-2.78557114e-02],
#[Out]#        [-2.54509018e-02],
#[Out]#        [-2.30460922e-02],
#[Out]#        [-2.06412826e-02],
#[Out]#        [-1.82364729e-02],
#[Out]#        [-1.58316633e-02],
#[Out]#        [-1.34268537e-02],
#[Out]#        [-1.10220441e-02],
#[Out]#        [-8.61723447e-03],
#[Out]#        [-6.21242485e-03],
#[Out]#        [-3.80761523e-03],
#[Out]#        [-1.40280561e-03],
#[Out]#        [ 1.00200401e-03],
#[Out]#        [ 3.40681363e-03],
#[Out]#        [ 5.81162325e-03],
#[Out]#        [ 8.21643287e-03],
#[Out]#        [ 1.06212425e-02],
#[Out]#        [ 1.30260521e-02],
#[Out]#        [ 1.54308617e-02],
#[Out]#        [ 1.78356713e-02],
#[Out]#        [ 2.02404810e-02],
#[Out]#        [ 2.26452906e-02],
#[Out]#        [ 2.50501002e-02],
#[Out]#        [ 2.74549098e-02],
#[Out]#        [ 2.98597194e-02],
#[Out]#        [ 3.22645291e-02],
#[Out]#        [ 3.46693387e-02],
#[Out]#        [ 3.70741483e-02],
#[Out]#        [ 3.94789579e-02],
#[Out]#        [ 4.18837675e-02],
#[Out]#        [ 4.42885772e-02],
#[Out]#        [ 4.66933868e-02],
#[Out]#        [ 4.90981964e-02],
#[Out]#        [ 5.15030060e-02],
#[Out]#        [ 5.39078156e-02],
#[Out]#        [ 5.63126253e-02],
#[Out]#        [ 5.87174349e-02],
#[Out]#        [ 6.11222445e-02],
#[Out]#        [ 6.35270541e-02],
#[Out]#        [ 6.59318637e-02],
#[Out]#        [ 6.83366733e-02],
#[Out]#        [ 7.07414830e-02],
#[Out]#        [ 7.31462926e-02],
#[Out]#        [ 7.55511022e-02],
#[Out]#        [ 7.79559118e-02],
#[Out]#        [ 8.03607214e-02],
#[Out]#        [ 8.27655311e-02],
#[Out]#        [ 8.51703407e-02],
#[Out]#        [ 8.75751503e-02],
#[Out]#        [ 8.99799599e-02],
#[Out]#        [ 9.23847695e-02],
#[Out]#        [ 9.47895792e-02],
#[Out]#        [ 9.71943888e-02],
#[Out]#        [ 9.95991984e-02],
#[Out]#        [ 1.02004008e-01],
#[Out]#        [ 1.04408818e-01],
#[Out]#        [ 1.06813627e-01],
#[Out]#        [ 1.09218437e-01],
#[Out]#        [ 1.11623246e-01],
#[Out]#        [ 1.14028056e-01],
#[Out]#        [ 1.16432866e-01],
#[Out]#        [ 1.18837675e-01],
#[Out]#        [ 1.21242485e-01],
#[Out]#        [ 1.23647295e-01],
#[Out]#        [ 1.26052104e-01],
#[Out]#        [ 1.28456914e-01],
#[Out]#        [ 1.30861723e-01],
#[Out]#        [ 1.33266533e-01],
#[Out]#        [ 1.35671343e-01],
#[Out]#        [ 1.38076152e-01],
#[Out]#        [ 1.40480962e-01],
#[Out]#        [ 1.42885772e-01],
#[Out]#        [ 1.45290581e-01],
#[Out]#        [ 1.47695391e-01],
#[Out]#        [ 1.50100200e-01],
#[Out]#        [ 1.52505010e-01],
#[Out]#        [ 1.54909820e-01],
#[Out]#        [ 1.57314629e-01],
#[Out]#        [ 1.59719439e-01],
#[Out]#        [ 1.62124248e-01],
#[Out]#        [ 1.64529058e-01],
#[Out]#        [ 1.66933868e-01],
#[Out]#        [ 1.69338677e-01],
#[Out]#        [ 1.71743487e-01],
#[Out]#        [ 1.74148297e-01],
#[Out]#        [ 1.76553106e-01],
#[Out]#        [ 1.78957916e-01],
#[Out]#        [ 1.81362725e-01],
#[Out]#        [ 1.83767535e-01],
#[Out]#        [ 1.86172345e-01],
#[Out]#        [ 1.88577154e-01],
#[Out]#        [ 1.90981964e-01],
#[Out]#        [ 1.93386774e-01],
#[Out]#        [ 1.95791583e-01],
#[Out]#        [ 1.98196393e-01],
#[Out]#        [ 2.00601202e-01],
#[Out]#        [ 2.03006012e-01],
#[Out]#        [ 2.05410822e-01],
#[Out]#        [ 2.07815631e-01],
#[Out]#        [ 2.10220441e-01],
#[Out]#        [ 2.12625251e-01],
#[Out]#        [ 2.15030060e-01],
#[Out]#        [ 2.17434870e-01],
#[Out]#        [ 2.19839679e-01],
#[Out]#        [ 2.22244489e-01],
#[Out]#        [ 2.24649299e-01],
#[Out]#        [ 2.27054108e-01],
#[Out]#        [ 2.29458918e-01],
#[Out]#        [ 2.31863727e-01],
#[Out]#        [ 2.34268537e-01],
#[Out]#        [ 2.36673347e-01],
#[Out]#        [ 2.39078156e-01],
#[Out]#        [ 2.41482966e-01],
#[Out]#        [ 2.43887776e-01],
#[Out]#        [ 2.46292585e-01],
#[Out]#        [ 2.48697395e-01],
#[Out]#        [ 2.51102204e-01],
#[Out]#        [ 2.53507014e-01],
#[Out]#        [ 2.55911824e-01],
#[Out]#        [ 2.58316633e-01],
#[Out]#        [ 2.60721443e-01],
#[Out]#        [ 2.63126253e-01],
#[Out]#        [ 2.65531062e-01],
#[Out]#        [ 2.67935872e-01],
#[Out]#        [ 2.70340681e-01],
#[Out]#        [ 2.72745491e-01],
#[Out]#        [ 2.75150301e-01],
#[Out]#        [ 2.77555110e-01],
#[Out]#        [ 2.79959920e-01],
#[Out]#        [ 2.82364729e-01],
#[Out]#        [ 2.84769539e-01],
#[Out]#        [ 2.87174349e-01],
#[Out]#        [ 2.89579158e-01],
#[Out]#        [ 2.91983968e-01],
#[Out]#        [ 2.94388778e-01],
#[Out]#        [ 2.96793587e-01],
#[Out]#        [ 2.99198397e-01],
#[Out]#        [ 3.01603206e-01],
#[Out]#        [ 3.04008016e-01],
#[Out]#        [ 3.06412826e-01],
#[Out]#        [ 3.08817635e-01],
#[Out]#        [ 3.11222445e-01],
#[Out]#        [ 3.13627255e-01],
#[Out]#        [ 3.16032064e-01],
#[Out]#        [ 3.18436874e-01],
#[Out]#        [ 3.20841683e-01],
#[Out]#        [ 3.23246493e-01],
#[Out]#        [ 3.25651303e-01],
#[Out]#        [ 3.28056112e-01],
#[Out]#        [ 3.30460922e-01],
#[Out]#        [ 3.32865731e-01],
#[Out]#        [ 3.35270541e-01],
#[Out]#        [ 3.37675351e-01],
#[Out]#        [ 3.40080160e-01],
#[Out]#        [ 3.42484970e-01],
#[Out]#        [ 3.44889780e-01],
#[Out]#        [ 3.47294589e-01],
#[Out]#        [ 3.49699399e-01],
#[Out]#        [ 3.52104208e-01],
#[Out]#        [ 3.54509018e-01],
#[Out]#        [ 3.56913828e-01],
#[Out]#        [ 3.59318637e-01],
#[Out]#        [ 3.61723447e-01],
#[Out]#        [ 3.64128257e-01],
#[Out]#        [ 3.66533066e-01],
#[Out]#        [ 3.68937876e-01],
#[Out]#        [ 3.71342685e-01],
#[Out]#        [ 3.73747495e-01],
#[Out]#        [ 3.76152305e-01],
#[Out]#        [ 3.78557114e-01],
#[Out]#        [ 3.80961924e-01],
#[Out]#        [ 3.83366733e-01],
#[Out]#        [ 3.85771543e-01],
#[Out]#        [ 3.88176353e-01],
#[Out]#        [ 3.90581162e-01],
#[Out]#        [ 3.92985972e-01],
#[Out]#        [ 3.95390782e-01],
#[Out]#        [ 3.97795591e-01],
#[Out]#        [ 4.00200401e-01],
#[Out]#        [ 4.02605210e-01],
#[Out]#        [ 4.05010020e-01],
#[Out]#        [ 4.07414830e-01],
#[Out]#        [ 4.09819639e-01],
#[Out]#        [ 4.12224449e-01],
#[Out]#        [ 4.14629259e-01],
#[Out]#        [ 4.17034068e-01],
#[Out]#        [ 4.19438878e-01],
#[Out]#        [ 4.21843687e-01],
#[Out]#        [ 4.24248497e-01],
#[Out]#        [ 4.26653307e-01],
#[Out]#        [ 4.29058116e-01],
#[Out]#        [ 4.31462926e-01],
#[Out]#        [ 4.33867735e-01],
#[Out]#        [ 4.36272545e-01],
#[Out]#        [ 4.38677355e-01],
#[Out]#        [ 4.41082164e-01],
#[Out]#        [ 4.43486974e-01],
#[Out]#        [ 4.45891784e-01],
#[Out]#        [ 4.48296593e-01],
#[Out]#        [ 4.50701403e-01],
#[Out]#        [ 4.53106212e-01],
#[Out]#        [ 4.55511022e-01],
#[Out]#        [ 4.57915832e-01],
#[Out]#        [ 4.60320641e-01],
#[Out]#        [ 4.62725451e-01],
#[Out]#        [ 4.65130261e-01],
#[Out]#        [ 4.67535070e-01],
#[Out]#        [ 4.69939880e-01],
#[Out]#        [ 4.72344689e-01],
#[Out]#        [ 4.74749499e-01],
#[Out]#        [ 4.77154309e-01],
#[Out]#        [ 4.79559118e-01],
#[Out]#        [ 4.81963928e-01],
#[Out]#        [ 4.84368737e-01],
#[Out]#        [ 4.86773547e-01],
#[Out]#        [ 4.89178357e-01],
#[Out]#        [ 4.91583166e-01],
#[Out]#        [ 4.93987976e-01],
#[Out]#        [ 4.96392786e-01],
#[Out]#        [ 4.98797595e-01],
#[Out]#        [ 5.01202405e-01],
#[Out]#        [ 5.03607214e-01],
#[Out]#        [ 5.06012024e-01],
#[Out]#        [ 5.08416834e-01],
#[Out]#        [ 5.10821643e-01],
#[Out]#        [ 5.13226453e-01],
#[Out]#        [ 5.15631263e-01],
#[Out]#        [ 5.18036072e-01],
#[Out]#        [ 5.20440882e-01],
#[Out]#        [ 5.22845691e-01],
#[Out]#        [ 5.25250501e-01],
#[Out]#        [ 5.27655311e-01],
#[Out]#        [ 5.30060120e-01],
#[Out]#        [ 5.32464930e-01],
#[Out]#        [ 5.34869739e-01],
#[Out]#        [ 5.37274549e-01],
#[Out]#        [ 5.39679359e-01],
#[Out]#        [ 5.42084168e-01],
#[Out]#        [ 5.44488978e-01],
#[Out]#        [ 5.46893788e-01],
#[Out]#        [ 5.49298597e-01],
#[Out]#        [ 5.51703407e-01],
#[Out]#        [ 5.54108216e-01],
#[Out]#        [ 5.56513026e-01],
#[Out]#        [ 5.58917836e-01],
#[Out]#        [ 5.61322645e-01],
#[Out]#        [ 5.63727455e-01],
#[Out]#        [ 5.66132265e-01],
#[Out]#        [ 5.68537074e-01],
#[Out]#        [ 5.70941884e-01],
#[Out]#        [ 5.73346693e-01],
#[Out]#        [ 5.75751503e-01],
#[Out]#        [ 5.78156313e-01],
#[Out]#        [ 5.80561122e-01],
#[Out]#        [ 5.82965932e-01],
#[Out]#        [ 5.85370741e-01],
#[Out]#        [ 5.87775551e-01],
#[Out]#        [ 5.90180361e-01],
#[Out]#        [ 5.92585170e-01],
#[Out]#        [ 5.94989980e-01],
#[Out]#        [ 5.97394790e-01],
#[Out]#        [ 5.99799599e-01],
#[Out]#        [ 6.02204409e-01],
#[Out]#        [ 6.04609218e-01],
#[Out]#        [ 6.07014028e-01],
#[Out]#        [ 6.09418838e-01],
#[Out]#        [ 6.11823647e-01],
#[Out]#        [ 6.14228457e-01],
#[Out]#        [ 6.16633267e-01],
#[Out]#        [ 6.19038076e-01],
#[Out]#        [ 6.21442886e-01],
#[Out]#        [ 6.23847695e-01],
#[Out]#        [ 6.26252505e-01],
#[Out]#        [ 6.28657315e-01],
#[Out]#        [ 6.31062124e-01],
#[Out]#        [ 6.33466934e-01],
#[Out]#        [ 6.35871743e-01],
#[Out]#        [ 6.38276553e-01],
#[Out]#        [ 6.40681363e-01],
#[Out]#        [ 6.43086172e-01],
#[Out]#        [ 6.45490982e-01],
#[Out]#        [ 6.47895792e-01],
#[Out]#        [ 6.50300601e-01],
#[Out]#        [ 6.52705411e-01],
#[Out]#        [ 6.55110220e-01],
#[Out]#        [ 6.57515030e-01],
#[Out]#        [ 6.59919840e-01],
#[Out]#        [ 6.62324649e-01],
#[Out]#        [ 6.64729459e-01],
#[Out]#        [ 6.67134269e-01],
#[Out]#        [ 6.69539078e-01],
#[Out]#        [ 6.71943888e-01],
#[Out]#        [ 6.74348697e-01],
#[Out]#        [ 6.76753507e-01],
#[Out]#        [ 6.79158317e-01],
#[Out]#        [ 6.81563126e-01],
#[Out]#        [ 6.83967936e-01],
#[Out]#        [ 6.86372745e-01],
#[Out]#        [ 6.88777555e-01],
#[Out]#        [ 6.91182365e-01],
#[Out]#        [ 6.93587174e-01],
#[Out]#        [ 6.95991984e-01],
#[Out]#        [ 6.98396794e-01],
#[Out]#        [ 7.00801603e-01],
#[Out]#        [ 7.03206413e-01],
#[Out]#        [ 7.05611222e-01],
#[Out]#        [ 7.08016032e-01],
#[Out]#        [ 7.10420842e-01],
#[Out]#        [ 7.12825651e-01],
#[Out]#        [ 7.15230461e-01],
#[Out]#        [ 7.17635271e-01],
#[Out]#        [ 7.20040080e-01],
#[Out]#        [ 7.22444890e-01],
#[Out]#        [ 7.24849699e-01],
#[Out]#        [ 7.27254509e-01],
#[Out]#        [ 7.29659319e-01],
#[Out]#        [ 7.32064128e-01],
#[Out]#        [ 7.34468938e-01],
#[Out]#        [ 7.36873747e-01],
#[Out]#        [ 7.39278557e-01],
#[Out]#        [ 7.41683367e-01],
#[Out]#        [ 7.44088176e-01],
#[Out]#        [ 7.46492986e-01],
#[Out]#        [ 7.48897796e-01],
#[Out]#        [ 7.51302605e-01],
#[Out]#        [ 7.53707415e-01],
#[Out]#        [ 7.56112224e-01],
#[Out]#        [ 7.58517034e-01],
#[Out]#        [ 7.60921844e-01],
#[Out]#        [ 7.63326653e-01],
#[Out]#        [ 7.65731463e-01],
#[Out]#        [ 7.68136273e-01],
#[Out]#        [ 7.70541082e-01],
#[Out]#        [ 7.72945892e-01],
#[Out]#        [ 7.75350701e-01],
#[Out]#        [ 7.77755511e-01],
#[Out]#        [ 7.80160321e-01],
#[Out]#        [ 7.82565130e-01],
#[Out]#        [ 7.84969940e-01],
#[Out]#        [ 7.87374749e-01],
#[Out]#        [ 7.89779559e-01],
#[Out]#        [ 7.92184369e-01],
#[Out]#        [ 7.94589178e-01],
#[Out]#        [ 7.96993988e-01],
#[Out]#        [ 7.99398798e-01],
#[Out]#        [ 8.01803607e-01],
#[Out]#        [ 8.04208417e-01],
#[Out]#        [ 8.06613226e-01],
#[Out]#        [ 8.09018036e-01],
#[Out]#        [ 8.11422846e-01],
#[Out]#        [ 8.13827655e-01],
#[Out]#        [ 8.16232465e-01],
#[Out]#        [ 8.18637275e-01],
#[Out]#        [ 8.21042084e-01],
#[Out]#        [ 8.23446894e-01],
#[Out]#        [ 8.25851703e-01],
#[Out]#        [ 8.28256513e-01],
#[Out]#        [ 8.30661323e-01],
#[Out]#        [ 8.33066132e-01],
#[Out]#        [ 8.35470942e-01],
#[Out]#        [ 8.37875752e-01],
#[Out]#        [ 8.40280561e-01],
#[Out]#        [ 8.42685371e-01],
#[Out]#        [ 8.45090180e-01],
#[Out]#        [ 8.47494990e-01],
#[Out]#        [ 8.49899800e-01],
#[Out]#        [ 8.52304609e-01],
#[Out]#        [ 8.54709419e-01],
#[Out]#        [ 8.57114228e-01],
#[Out]#        [ 8.59519038e-01],
#[Out]#        [ 8.61923848e-01],
#[Out]#        [ 8.64328657e-01],
#[Out]#        [ 8.66733467e-01],
#[Out]#        [ 8.69138277e-01],
#[Out]#        [ 8.71543086e-01],
#[Out]#        [ 8.73947896e-01],
#[Out]#        [ 8.76352705e-01],
#[Out]#        [ 8.78757515e-01],
#[Out]#        [ 8.81162325e-01],
#[Out]#        [ 8.83567134e-01],
#[Out]#        [ 8.85971944e-01],
#[Out]#        [ 8.88376754e-01],
#[Out]#        [ 8.90781563e-01],
#[Out]#        [ 8.93186373e-01],
#[Out]#        [ 8.95591182e-01],
#[Out]#        [ 8.97995992e-01],
#[Out]#        [ 9.00400802e-01],
#[Out]#        [ 9.02805611e-01],
#[Out]#        [ 9.05210421e-01],
#[Out]#        [ 9.07615230e-01],
#[Out]#        [ 9.10020040e-01],
#[Out]#        [ 9.12424850e-01],
#[Out]#        [ 9.14829659e-01],
#[Out]#        [ 9.17234469e-01],
#[Out]#        [ 9.19639279e-01],
#[Out]#        [ 9.22044088e-01],
#[Out]#        [ 9.24448898e-01],
#[Out]#        [ 9.26853707e-01],
#[Out]#        [ 9.29258517e-01],
#[Out]#        [ 9.31663327e-01],
#[Out]#        [ 9.34068136e-01],
#[Out]#        [ 9.36472946e-01],
#[Out]#        [ 9.38877756e-01],
#[Out]#        [ 9.41282565e-01],
#[Out]#        [ 9.43687375e-01],
#[Out]#        [ 9.46092184e-01],
#[Out]#        [ 9.48496994e-01],
#[Out]#        [ 9.50901804e-01],
#[Out]#        [ 9.53306613e-01],
#[Out]#        [ 9.55711423e-01],
#[Out]#        [ 9.58116232e-01],
#[Out]#        [ 9.60521042e-01],
#[Out]#        [ 9.62925852e-01],
#[Out]#        [ 9.65330661e-01],
#[Out]#        [ 9.67735471e-01],
#[Out]#        [ 9.70140281e-01],
#[Out]#        [ 9.72545090e-01],
#[Out]#        [ 9.74949900e-01],
#[Out]#        [ 9.77354709e-01],
#[Out]#        [ 9.79759519e-01],
#[Out]#        [ 9.82164329e-01],
#[Out]#        [ 9.84569138e-01],
#[Out]#        [ 9.86973948e-01],
#[Out]#        [ 9.89378758e-01],
#[Out]#        [ 9.91783567e-01],
#[Out]#        [ 9.94188377e-01],
#[Out]#        [ 9.96593186e-01],
#[Out]#        [ 9.98997996e-01],
#[Out]#        [ 1.00140281e+00],
#[Out]#        [ 1.00380762e+00],
#[Out]#        [ 1.00621242e+00],
#[Out]#        [ 1.00861723e+00],
#[Out]#        [ 1.01102204e+00],
#[Out]#        [ 1.01342685e+00],
#[Out]#        [ 1.01583166e+00],
#[Out]#        [ 1.01823647e+00],
#[Out]#        [ 1.02064128e+00],
#[Out]#        [ 1.02304609e+00],
#[Out]#        [ 1.02545090e+00],
#[Out]#        [ 1.02785571e+00],
#[Out]#        [ 1.03026052e+00],
#[Out]#        [ 1.03266533e+00],
#[Out]#        [ 1.03507014e+00],
#[Out]#        [ 1.03747495e+00],
#[Out]#        [ 1.03987976e+00],
#[Out]#        [ 1.04228457e+00],
#[Out]#        [ 1.04468938e+00],
#[Out]#        [ 1.04709419e+00],
#[Out]#        [ 1.04949900e+00],
#[Out]#        [ 1.05190381e+00],
#[Out]#        [ 1.05430862e+00],
#[Out]#        [ 1.05671343e+00],
#[Out]#        [ 1.05911824e+00],
#[Out]#        [ 1.06152305e+00],
#[Out]#        [ 1.06392786e+00],
#[Out]#        [ 1.06633267e+00],
#[Out]#        [ 1.06873747e+00],
#[Out]#        [ 1.07114228e+00],
#[Out]#        [ 1.07354709e+00],
#[Out]#        [ 1.07595190e+00],
#[Out]#        [ 1.07835671e+00],
#[Out]#        [ 1.08076152e+00],
#[Out]#        [ 1.08316633e+00],
#[Out]#        [ 1.08557114e+00],
#[Out]#        [ 1.08797595e+00],
#[Out]#        [ 1.09038076e+00],
#[Out]#        [ 1.09278557e+00],
#[Out]#        [ 1.09519038e+00],
#[Out]#        [ 1.09759519e+00],
#[Out]#        [ 1.10000000e+00]])
x_test.shape
#[Out]# (500, 1)
x_test.head()
x_test[4:6,:]
#[Out]# array([[-0.09038076],
#[Out]#        [-0.08797595]])
plt.scatter(x.ravel(),y,color='blac')
plt.scatter(x.ravel(),y,color='black')
#[Out]# <matplotlib.collections.PathCollection at 0x25545cc8358>
plt.show()
get_ipython().run_line_magic('pylab', '')
plt.scatter(x.ravel(),y,color='black')
#[Out]# <matplotlib.collections.PathCollection at 0x2554b70beb8>
axis = plt.axis()
for degree in [1,3,5]:
    y_test = PolynomialRegression(degree).fit(x,y).predict(x_test)
    plt.plot(x_test.ravel(),y_test)
    
plt.xlim(-0.1,1.0)
#[Out]# (-0.1, 1.0)
plt.ylim(-2,12)
#[Out]# (-2, 12)
plt.legend(loc='best')
#[Out]# <matplotlib.legend.Legend at 0x255495e4a20>
rng.randn(10)
#[Out]# array([ 1.04499441,  0.6085147 , -0.0693287 , -0.10839207,  0.45015551,
#[Out]#         1.7653351 ,  0.8709698 , -0.50845713,  0.77741921, -0.11877117])
rng.randn(10,2)
#[Out]# array([[-0.19899818,  1.86647138],
#[Out]#        [-0.4189379 , -0.47918492],
#[Out]#        [-1.95210529, -1.40232915],
#[Out]#        [ 0.45112294, -0.6949209 ],
#[Out]#        [ 0.5154138 , -1.11487105],
#[Out]#        [-0.76730983,  0.67457071],
#[Out]#        [ 1.46089238,  0.5924728 ],
#[Out]#        [ 1.19783084,  1.70459417],
#[Out]#        [ 1.04008915, -0.91844004],
#[Out]#        [-0.10534471,  0.63019567]])
x
#[Out]# array([[1.73907352e-01],
#[Out]#        [5.18867376e-01],
#[Out]#        [1.30815988e-08],
#[Out]#        [9.14049845e-02],
#[Out]#        [2.15372915e-02],
#[Out]#        [8.52641608e-03],
#[Out]#        [3.46928663e-02],
#[Out]#        [1.19412216e-01],
#[Out]#        [1.57424429e-01],
#[Out]#        [2.90323473e-01],
#[Out]#        [1.75724041e-01],
#[Out]#        [4.69525764e-01],
#[Out]#        [4.18007224e-02],
#[Out]#        [7.71090232e-01],
#[Out]#        [7.50080261e-04],
#[Out]#        [4.49526682e-01],
#[Out]#        [1.74143298e-01],
#[Out]#        [3.12134324e-01],
#[Out]#        [1.97084925e-02],
#[Out]#        [3.92442000e-02],
#[Out]#        [6.41191864e-01],
#[Out]#        [9.37530479e-01],
#[Out]#        [9.82347155e-02],
#[Out]#        [4.79310604e-01],
#[Out]#        [7.68057946e-01],
#[Out]#        [8.00321082e-01],
#[Out]#        [7.23251789e-03],
#[Out]#        [1.52527609e-03],
#[Out]#        [2.88423714e-02],
#[Out]#        [7.71134256e-01],
#[Out]#        [9.67209972e-03],
#[Out]#        [1.77331632e-01],
#[Out]#        [9.17552352e-01],
#[Out]#        [2.84265221e-01],
#[Out]#        [4.78693941e-01],
#[Out]#        [9.95501134e-02],
#[Out]#        [4.71283524e-01],
#[Out]#        [6.96600012e-01],
#[Out]#        [3.34461088e-04],
#[Out]#        [5.62716493e-01]])
y
#[Out]# array([ 7.24998644,  7.70041705, -0.12288892,  3.83970623,  1.50418461,
#[Out]#         1.31600899,  1.88404109,  5.0456151 ,  5.42819209,  6.59281674,
#[Out]#         5.70193919,  8.23148858,  1.8305394 ,  9.086429  ,  1.73425177,
#[Out]#         8.92229631,  6.16043712,  6.68597765,  0.8992155 ,  4.51082693,
#[Out]#         8.70162943,  8.39917725,  5.14639037, 10.37406543,  8.96816213,
#[Out]#         9.50648826,  0.9746409 , -0.20201375,  1.09605993,  8.50272859,
#[Out]#         0.67301646,  6.98083184,  9.856233  ,  8.32873282,  8.55755817,
#[Out]#         5.87386864,  7.49515774,  9.997533  ,  0.54626444,  8.1929663 ])
np.allclose(x_test,np.linspace(-0.1,1.1,500))
#[Out]# False
tt = np.linspace(1,10,5)
tt
#[Out]# array([ 1.  ,  3.25,  5.5 ,  7.75, 10.  ])
tt[:,None]
#[Out]# array([[ 1.  ],
#[Out]#        [ 3.25],
#[Out]#        [ 5.5 ],
#[Out]#        [ 7.75],
#[Out]#        [10.  ]])
tt.shape
#[Out]# (5,)
tt[:,None].shape
#[Out]# (5, 1)
x.shape
#[Out]# (40, 1)
(x.ravel(x)).shape
(x.ravel()).shape
#[Out]# (40,)
x.ravel()
#[Out]# array([1.73907352e-01, 5.18867376e-01, 1.30815988e-08, 9.14049845e-02,
#[Out]#        2.15372915e-02, 8.52641608e-03, 3.46928663e-02, 1.19412216e-01,
#[Out]#        1.57424429e-01, 2.90323473e-01, 1.75724041e-01, 4.69525764e-01,
#[Out]#        4.18007224e-02, 7.71090232e-01, 7.50080261e-04, 4.49526682e-01,
#[Out]#        1.74143298e-01, 3.12134324e-01, 1.97084925e-02, 3.92442000e-02,
#[Out]#        6.41191864e-01, 9.37530479e-01, 9.82347155e-02, 4.79310604e-01,
#[Out]#        7.68057946e-01, 8.00321082e-01, 7.23251789e-03, 1.52527609e-03,
#[Out]#        2.88423714e-02, 7.71134256e-01, 9.67209972e-03, 1.77331632e-01,
#[Out]#        9.17552352e-01, 2.84265221e-01, 4.78693941e-01, 9.95501134e-02,
#[Out]#        4.71283524e-01, 6.96600012e-01, 3.34461088e-04, 5.62716493e-01])
from sklearn.learning_curve import validation_curve
degree = np.arange(0,21)
train_score,val_score = validation_curve(PolynomialRegression(),x,y,'polynomiafeatures_degree',degree,cv=7)
train_score,val_score = validation_curve(PolynomialRegression(),x,y,'polynomiafeatures_degree',cv=7)
get_ipython().run_line_magic('logstop', '')
