# IPython log file

get_ipython().run_line_magic('bookmark', '-l')
get_ipython().run_line_magic('cd', 'c:\\python')
get_ipython().run_line_magic('ls', '')
get_ipython().run_line_magic('bookmark', '-b C:\\python\\python_数据科学手册')
get_ipython().run_line_magic('bookmark', 'b C:\\python\\python_数据科学手册')
get_ipython().run_line_magic('bookmark', 'a C:\\python\\python_数据挖掘入门与实践')
get_ipython().run_line_magic('cd', 'b')
get_ipython().run_line_magic('pwd', '')
#[Out]# 'C:\\python\\python_数据科学手册'
get_ipython().run_line_magic('mkdir', 'myself_x')
get_ipython().run_line_magic('cd', 'myself_x/')
, 20 May 2018 17:34:36
import numpy as np 
, 20 May 2018 17:34:42
np.random.seed(0)
, 20 May 2018 17:39:17
def c_r(values):
    oput = np.empty(len(values))
    for i in range(len(values)):
        oput[i] = 1.0/values[i]
    return oput
values = np.random.randint(1,10,size=5)
c_r(values)
#[Out]# array([0.16666667, 1.        , 0.25      , 0.25      , 0.125     ])
, 20 May 2018 17:39:21
values
#[Out]# array([6, 1, 4, 4, 8])
, 20 May 2018 17:41:49
big_array = np.random.randint(1,100,size=1000000)
, 20 May 2018 17:42:02
get_ipython().run_line_magic('timeit', 'c_r(big_array)')
, 20 May 2018 17:48:05
print(c_r(values))
, 20 May 2018 17:48:12
print(1.0/values)
, 20 May 2018 17:48:22
get_ipython().run_line_magic('timeit', '(1.0/big_array)')
, 20 May 2018 17:49:16
np.arange(5)/np.arange(1,6)
#[Out]# array([0.        , 0.5       , 0.66666667, 0.75      , 0.8       ])
, 20 May 2018 17:49:34
x = np.arange(9).reshape((3,3))
, 20 May 2018 17:49:59
2 ** x 
#[Out]# array([[  1,   2,   4],
#[Out]#        [  8,  16,  32],
#[Out]#        [ 64, 128, 256]], dtype=int32)
, 20 May 2018 17:51:38
x = np.arange(4)
, 20 May 2018 17:51:40
x 
#[Out]# array([0, 1, 2, 3])
, 20 May 2018 17:52:12
print(x),print(x+5),print(x-5),print(x*2),print(x/2),print(x//2)
#[Out]# (None, None, None, None, None, None)
, 20 May 2018 17:55:45
print(-x),print(x **2),print(x%2)
#[Out]# (None, None, None)
, 20 May 2018 17:56:58
x = np.array([-2,-1,0,1,2])
, 20 May 2018 17:57:03
abs(x)
#[Out]# array([2, 1, 0, 1, 2])
, 20 May 2018 17:57:37
np.abs(x)
#[Out]# array([2, 1, 0, 1, 2])
, 20 May 2018 17:58:51
x = np.array([3-4j,4-3j,2+0j,0+1j])
, 20 May 2018 17:58:56
np.abs(x)
#[Out]# array([5., 5., 2., 1.])
, 20 May 2018 18:00:44
theta = np.linspace(0,np.pi,3)
, 20 May 2018 18:01:18
print(theta,np.sin(theta),cos(theta),tan(theta))
, 20 May 2018 18:01:36
print(theta,np.sin(theta),np.cos(theta),np.tan(theta))
, 20 May 2018 18:04:12
x = np.arange(5)
, 20 May 2018 18:04:22
y = np.empty(5)
, 20 May 2018 18:04:34
np.multiply(x,10,out=y)
#[Out]# array([ 0., 10., 20., 30., 40.])
, 20 May 2018 18:04:39
print(y)
, 20 May 2018 18:04:40
y
#[Out]# array([ 0., 10., 20., 30., 40.])
, 20 May 2018 18:05:32
y = np.zeros(10)
, 20 May 2018 18:07:06
np.power(2,x,out=y[::2])
#[Out]# array([ 1.,  2.,  4.,  8., 16.])
, 20 May 2018 18:07:53
x = np.arange(1,6)
, 20 May 2018 18:08:05
np.add.reduce(x)
#[Out]# 15
, 20 May 2018 18:08:07
x
#[Out]# array([1, 2, 3, 4, 5])
, 20 May 2018 18:09:18
np.multiply.reduce(x)
#[Out]# 120
, 20 May 2018 18:09:31
np.add.accumulate(x)
#[Out]# array([ 1,  3,  6, 10, 15], dtype=int32)
, 20 May 2018 18:09:49
np.multiply.accumulate(x)
#[Out]# array([  1,   2,   6,  24, 120], dtype=int32)
, 20 May 2018 18:11:23
x = np.arange(1,6)
, 20 May 2018 18:11:34
np.multiply.outer(x,x)
#[Out]# array([[ 1,  2,  3,  4,  5],
#[Out]#        [ 2,  4,  6,  8, 10],
#[Out]#        [ 3,  6,  9, 12, 15],
#[Out]#        [ 4,  8, 12, 16, 20],
#[Out]#        [ 5, 10, 15, 20, 25]])
, 20 May 2018 18:12:38
lsum = np.random.random(100)
, 20 May 2018 18:12:44
sum(lsum)
#[Out]# 50.461758453195614
, 20 May 2018 18:12:58
np.sum(lsum)
#[Out]# 50.46175845319564
, 20 May 2018 18:13:33
big_array = np.random.rand(100000)
, 20 May 2018 18:13:44
get_ipython().run_line_magic('timeit', 'sum(big_array)')
, 20 May 2018 18:14:11
get_ipython().run_line_magic('timeit', 'np.sum(big_array)')
, 20 May 2018 18:14:39
min(big_array)
#[Out]# 7.071203171893359e-07
, 20 May 2018 18:14:44
max(big_array)
#[Out]# 0.9999925005444847
, 20 May 2018 18:15:13
get_ipython().run_line_magic('timeit', 'np.min(big_array)')
, 20 May 2018 18:15:30
get_ipython().run_line_magic('timeit', 'min(big_array)')
, 20 May 2018 20:17:39
big_array.min()
#[Out]# 7.071203171893359e-07
, 20 May 2018 20:18:06
big_array.max()
#[Out]# 0.9999925005444847
, 20 May 2018 20:25:42
m = np.random.random((3,4))
, 20 May 2018 20:26:04
m
#[Out]# array([[0.7127119 , 0.14347193, 0.37559829, 0.20236951],
#[Out]#        [0.03185641, 0.0169032 , 0.21793425, 0.28482219],
#[Out]#        [0.53087668, 0.34572774, 0.10656221, 0.70060497]])
, 20 May 2018 20:26:06
n.sum()
, 20 May 2018 20:26:11
m.sum()
#[Out]# 3.6694392820140505
, 20 May 2018 20:26:24
m.min(axis=1)
#[Out]# array([0.14347193, 0.0169032 , 0.10656221])
, 20 May 2018 20:26:40
m.max(axis=0)
#[Out]# array([0.7127119 , 0.34572774, 0.37559829, 0.70060497])
, 20 May 2018 20:28:08
m
#[Out]# array([[0.7127119 , 0.14347193, 0.37559829, 0.20236951],
#[Out]#        [0.03185641, 0.0169032 , 0.21793425, 0.28482219],
#[Out]#        [0.53087668, 0.34572774, 0.10656221, 0.70060497]])
, 20 May 2018 20:28:18
np.argmin(m)
#[Out]# 5
, 20 May 2018 20:28:23
np.argmax(m)
#[Out]# 0
, 20 May 2018 20:29:00
np,median(m)
, 20 May 2018 20:29:14
np.median(m)
#[Out]# 0.25137821894321877
, 20 May 2018 20:29:20
m
#[Out]# array([[0.7127119 , 0.14347193, 0.37559829, 0.20236951],
#[Out]#        [0.03185641, 0.0169032 , 0.21793425, 0.28482219],
#[Out]#        [0.53087668, 0.34572774, 0.10656221, 0.70060497]])
, 20 May 2018 20:29:34
np.percentile(m)
, 20 May 2018 20:29:44
get_ipython().run_line_magic('pinfo', 'np.percentile')
, 20 May 2018 20:30:13
np.percentile(m,2,axis=0)
#[Out]# array([0.05181722, 0.02196595, 0.11101709, 0.20566761])
, 20 May 2018 20:30:16
m
#[Out]# array([[0.7127119 , 0.14347193, 0.37559829, 0.20236951],
#[Out]#        [0.03185641, 0.0169032 , 0.21793425, 0.28482219],
#[Out]#        [0.53087668, 0.34572774, 0.10656221, 0.70060497]])
, 20 May 2018 20:31:12
np.any(x)
#[Out]# True
, 20 May 2018 20:31:23
np.all(x)
#[Out]# True
, 20 May 2018 20:31:45
get_ipython().run_line_magic('pwd', '')
#[Out]# 'C:\\python\\python_数据科学手册\\myself_x'
, 20 May 2018 20:31:49
get_ipython().run_line_magic('cd', '..')
, 20 May 2018 20:31:50
get_ipython().run_line_magic('pwd', '')
#[Out]# 'C:\\python\\python_数据科学手册'
, 20 May 2018 20:31:53
get_ipython().run_line_magic('cd', '..')
, 20 May 2018 20:31:55
get_ipython().run_line_magic('ls', '')
, 20 May 2018 20:32:04
get_ipython().run_line_magic('cd', 'python_数据科学手册/')
, 20 May 2018 20:32:05
get_ipython().run_line_magic('ls', '')
, 20 May 2018 20:32:07
get_ipython().run_line_magic('cd', 'PythonDataScienceHandbook-master/')
, 20 May 2018 20:32:08
get_ipython().run_line_magic('ls', '')
, 20 May 2018 20:32:19
get_ipython().run_line_magic('cd', 'notebooks/')
, 20 May 2018 20:32:19
get_ipython().run_line_magic('ls', '')
, 20 May 2018 20:32:33
get_ipython().run_line_magic('cd', 'b')
, 20 May 2018 20:32:35
sl
, 20 May 2018 20:32:37
get_ipython().run_line_magic('ls', '')
, 20 May 2018 20:32:39
get_ipython().run_line_magic('cd', 'myself_x/')
, 20 May 2018 20:33:37
get_ipython().run_line_magic('ls', '')
, 20 May 2018 20:34:00
get_ipython().system('head -4 president_heights.csv')
, 20 May 2018 20:34:13
import pandas as pd
, 20 May 2018 20:34:40
data = pd.read_csv('president_heights.csv')
, 20 May 2018 20:35:12
heights = np.array(data['height(cm)'])
, 20 May 2018 20:35:18
print(heights)
, 20 May 2018 20:36:02
heights.DESC
, 20 May 2018 20:36:11
type(heights)
#[Out]# numpy.ndarray
, 20 May 2018 20:36:33
print(heights.mean())
, 20 May 2018 20:38:02
heights.std()
#[Out]# 6.931843442745892
, 20 May 2018 20:38:16
heights.min()
#[Out]# 163
, 20 May 2018 20:38:21
heights.max()
#[Out]# 193
, 20 May 2018 20:39:00
np.percentile(heights,25))
, 20 May 2018 20:39:07
np.percentile(heights,25)
#[Out]# 174.25
, 20 May 2018 20:39:36
np.median(heights)
#[Out]# 182.0
, 20 May 2018 20:39:53
np.percentile(heights,75)
#[Out]# 183.0
, 20 May 2018 20:40:55
np.percentile(heights,75)
#[Out]# 183.0
, 20 May 2018 20:41:23
get_ipython().run_line_magic('matplotlib', 'inline')
, 20 May 2018 20:41:43
get_ipython().run_line_magic('pylab', '')
, 20 May 2018 20:42:01
import matplotlib.pyplot as plt
, 20 May 2018 20:42:14
import seaborn
, 20 May 2018 20:42:31
seaborn.set()
, 20 May 2018 20:43:31
plt.hist(heights)
#[Out]# (array([ 1.,  2.,  3.,  5.,  3.,  6., 12.,  3.,  5.,  2.]),
#[Out]#  array([163., 166., 169., 172., 175., 178., 181., 184., 187., 190., 193.]),
#[Out]#  <a list of 10 Patch objects>)
, 20 May 2018 20:44:11
plt.title(heights)
#[Out]# Text(0.5,1,'[189 170 189 163 183 171 185 168 173 183 173 173 175 178 183 193 178 173\n 174 183 183 168 170 178 182 180 183 178 182 188 175 179 183 193 182 183\n 177 185 188 188 182 185]')
, 20 May 2018 20:44:52
plt.title('Height Distribution of US Presidents')
#[Out]# Text(0.5,1,'Height Distribution of US Presidents')
, 20 May 2018 20:45:12
plt.xlabel('heights(cm)')
#[Out]# Text(0.5,15.625,'heights(cm)')
, 20 May 2018 20:45:32
plt.ylabel('number')
#[Out]# Text(31.75,0.5,'number')
, 20 May 2018 20:46:28
a = np.array([0,1,2])
, 20 May 2018 20:46:54
b = np.array([5,5,5])
, 20 May 2018 20:47:01
a + b
#[Out]# array([5, 6, 7])
, 20 May 2018 20:47:35
a + 5
#[Out]# array([5, 6, 7])
, 20 May 2018 20:47:51
m = np.ones((3,3))
, 20 May 2018 20:47:56
m
#[Out]# array([[1., 1., 1.],
#[Out]#        [1., 1., 1.],
#[Out]#        [1., 1., 1.]])
, 20 May 2018 20:48:02
m + a
#[Out]# array([[1., 2., 3.],
#[Out]#        [1., 2., 3.],
#[Out]#        [1., 2., 3.]])
, 20 May 2018 20:48:06
m
#[Out]# array([[1., 1., 1.],
#[Out]#        [1., 1., 1.],
#[Out]#        [1., 1., 1.]])
, 20 May 2018 20:48:07
a
#[Out]# array([0, 1, 2])
, 20 May 2018 20:50:09
a = np.arange(3)
, 20 May 2018 20:50:34
b = np.arange(3)[:,np.newaxis]
, 20 May 2018 20:50:36
b
#[Out]# array([[0],
#[Out]#        [1],
#[Out]#        [2]])
, 20 May 2018 20:50:53
b1 = np.arange(3)
, 20 May 2018 20:50:55
b1
#[Out]# array([0, 1, 2])
, 20 May 2018 20:51:17
a
#[Out]# array([0, 1, 2])
, 20 May 2018 20:51:31
a + b
#[Out]# array([[0, 1, 2],
#[Out]#        [1, 2, 3],
#[Out]#        [2, 3, 4]])
, 20 May 2018 20:57:01
m = np.ones((2,3))
, 20 May 2018 20:57:12
a = np.arange(3)
, 20 May 2018 20:57:17
m
#[Out]# array([[1., 1., 1.],
#[Out]#        [1., 1., 1.]])
, 20 May 2018 20:57:19
a
#[Out]# array([0, 1, 2])
, 20 May 2018 20:57:53
m + a 
#[Out]# array([[1., 2., 3.],
#[Out]#        [1., 2., 3.]])
, 20 May 2018 20:58:20
m.shape
#[Out]# (2, 3)
, 20 May 2018 20:58:24
a.shape
#[Out]# (3,)
, 20 May 2018 20:59:42
a = np.arange(3).reshape((3,1))
, 20 May 2018 20:59:50
b = np.arange(3)
, 20 May 2018 20:59:52
a.shape
#[Out]# (3, 1)
, 20 May 2018 20:59:54
b.shape
#[Out]# (3,)
, 20 May 2018 21:00:00
a 
#[Out]# array([[0],
#[Out]#        [1],
#[Out]#        [2]])
, 20 May 2018 21:00:00
b
#[Out]# array([0, 1, 2])
, 20 May 2018 21:02:29
a + b
#[Out]# array([[0, 1, 2],
#[Out]#        [1, 2, 3],
#[Out]#        [2, 3, 4]])
, 20 May 2018 21:02:47
m = np.ones((3,2))
, 20 May 2018 21:02:56
a = np.arange(3)
, 20 May 2018 21:02:58
m.shape
#[Out]# (3, 2)
, 20 May 2018 21:03:01
a.shape
#[Out]# (3,)
, 20 May 2018 21:03:05
m
#[Out]# array([[1., 1.],
#[Out]#        [1., 1.],
#[Out]#        [1., 1.]])
, 20 May 2018 21:03:06
a
#[Out]# array([0, 1, 2])
, 20 May 2018 21:04:43
m + a
, 20 May 2018 21:05:20
a
#[Out]# array([0, 1, 2])
, 20 May 2018 21:05:35
a[:,np.newaxis].shape
#[Out]# (3, 1)
, 20 May 2018 21:05:51
m + a[:,np.newaxis]
#[Out]# array([[1., 1.],
#[Out]#        [2., 2.],
#[Out]#        [3., 3.]])
, 20 May 2018 21:07:48
x = np.random.random((10,3))
, 20 May 2018 21:08:03
x
#[Out]# array([[0.79698737, 0.33531933, 0.16336883],
#[Out]#        [0.60943997, 0.52725381, 0.60643168],
#[Out]#        [0.03064996, 0.55224484, 0.6249136 ],
#[Out]#        [0.21793755, 0.41199682, 0.51451275],
#[Out]#        [0.81164953, 0.22246375, 0.83530763],
#[Out]#        [0.86677365, 0.82692853, 0.87523231],
#[Out]#        [0.15378669, 0.47693824, 0.95510827],
#[Out]#        [0.91449503, 0.63660858, 0.50937503],
#[Out]#        [0.59820263, 0.77155391, 0.34056949],
#[Out]#        [0.89845696, 0.34362891, 0.94210559]])
, 20 May 2018 21:08:18
x.mean(0)
#[Out]# array([0.58983793, 0.51049367, 0.63669252])
, 20 May 2018 21:08:27
x.mean(1)
#[Out]# array([0.43189184, 0.58104182, 0.4026028 , 0.38148238, 0.6231403 ,
#[Out]#        0.8563115 , 0.52861107, 0.68682621, 0.57010868, 0.72806382])
, 20 May 2018 21:08:48
xmean = x.mean(0)
, 20 May 2018 21:09:41
x_centered =  x - xmean()
, 20 May 2018 21:09:47
x_centered =  x - xmean
, 20 May 2018 21:09:49
x.shape
#[Out]# (10, 3)
, 20 May 2018 21:09:56
xmean.shape
#[Out]# (3,)
, 20 May 2018 21:10:02
xmean
#[Out]# array([0.58983793, 0.51049367, 0.63669252])
, 20 May 2018 21:10:55
x_centered.mean(0)
#[Out]# array([-3.33066907e-17, -3.33066907e-17, -9.99200722e-17])
, 20 May 2018 21:12:03
x = np.linspace(0,5,50)
, 20 May 2018 21:12:29
y = np.linspace(0.5.50).[:,np.newaxis]
, 20 May 2018 21:12:46
y = np.linspace(0.5.50).[:,np.newaxis]
, 20 May 2018 21:13:02
y = np.linspace(0,5,50).[:,np.newaxis]
, 20 May 2018 21:13:15
y = np.linspace(0,5,50)[:,np.newaxis]
, 20 May 2018 21:13:24
x.shape
#[Out]# (50,)
, 20 May 2018 21:13:29
y.shape
#[Out]# (50, 1)
, 20 May 2018 21:14:24
z = np.sin(x) ** 10 + np.cos(10 + y * x) * np.cos(x)
, 20 May 2018 21:15:23
plt.imshow(z,origin='lower',extent=[0,5,0,5],cmap='viridis')
#[Out]# <matplotlib.image.AxesImage at 0x2208743dda0>
, 20 May 2018 21:15:34
plt.colorbar()
#[Out]# <matplotlib.colorbar.Colorbar at 0x2208780ccf8>
, 20 May 2018 21:31:29
get_ipython().run_line_magic('ls', '')
, 20 May 2018 21:31:51
rainfall = pd.read_csv('Seattle2014.csv')
, 20 May 2018 21:32:09
rainfall = rainfall.values
, 20 May 2018 21:32:14
type(rainfall)
#[Out]# numpy.ndarray
, 20 May 2018 21:32:36
inches = rainfall / 254 
, 20 May 2018 21:33:01
rainfall
#[Out]# array([['GHCND:USW00024233',
#[Out]#         'SEATTLE TACOMA INTERNATIONAL AIRPORT WA US', 20140101, ...,
#[Out]#         -9999, -9999, -9999],
#[Out]#        ['GHCND:USW00024233',
#[Out]#         'SEATTLE TACOMA INTERNATIONAL AIRPORT WA US', 20140102, ...,
#[Out]#         -9999, -9999, -9999],
#[Out]#        ['GHCND:USW00024233',
#[Out]#         'SEATTLE TACOMA INTERNATIONAL AIRPORT WA US', 20140103, ...,
#[Out]#         -9999, -9999, -9999],
#[Out]#        ...,
#[Out]#        ['GHCND:USW00024233',
#[Out]#         'SEATTLE TACOMA INTERNATIONAL AIRPORT WA US', 20141229, ...,
#[Out]#         -9999, -9999, -9999],
#[Out]#        ['GHCND:USW00024233',
#[Out]#         'SEATTLE TACOMA INTERNATIONAL AIRPORT WA US', 20141230, ...,
#[Out]#         -9999, -9999, -9999],
#[Out]#        ['GHCND:USW00024233',
#[Out]#         'SEATTLE TACOMA INTERNATIONAL AIRPORT WA US', 20141231, ...,
#[Out]#         -9999, -9999, -9999]], dtype=object)
, 20 May 2018 21:34:26
rainfall = pd.read_csv('Seattle2014.csv')['PRCP'].values
, 20 May 2018 21:34:32
rainfall
#[Out]# array([  0,  41,  15,   0,   0,   3, 122,  97,  58,  43, 213,  15,   0,
#[Out]#          0,   0,   0,   0,   0,   0,   0,   0,   5,   0,   0,   0,   0,
#[Out]#          0,  89, 216,   0,  23,  20,   0,   0,   0,   0,   0,   0,  51,
#[Out]#          5, 183, 170,  46,  18,  94, 117, 264, 145, 152,  10,  30,  28,
#[Out]#         25,  61, 130,   3,   0,   0,   0,   5, 191, 107, 165, 467,  30,
#[Out]#          0, 323,  43, 188,   0,   0,   5,  69,  81, 277,   3,   0,   5,
#[Out]#          0,   0,   0,   0,   0,  41,  36,   3, 221, 140,   0,   0,   0,
#[Out]#          0,  25,   0,  46,   0,   0,  46,   0,   0,   0,   0,   0,   0,
#[Out]#          5, 109, 185,   0, 137,   0,  51, 142,  89, 124,   0,  33,  69,
#[Out]#          0,   0,   0,   0,   0, 333, 160,  51,   0,   0, 137,  20,   5,
#[Out]#          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  38,
#[Out]#          0,  56,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
#[Out]#          0,   0,   0,   0,   0,   0,  18,  64,   0,   5,  36,  13,   0,
#[Out]#          8,   3,   0,   0,   0,   0,   0,   0,  18,  23,   0,   0,   0,
#[Out]#          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
#[Out]#          0,   0,   0,   0,   0,   0,   0,   3, 193,   0,   0,   0,   0,
#[Out]#          0,   0,   0,   0,   0,   5,   0,   0,   0,   0,   0,   0,   0,
#[Out]#          0,   5, 127, 216,   0,  10,   0,   0,   0,   0,   0,   0,   0,
#[Out]#          0,   0,   0,   0,   0,   0,   0,  84,  13,   0,  30,   0,   0,
#[Out]#          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   5,
#[Out]#          3,   0,   0,   0,   3, 183, 203,  43,  89,   0,   0,   8,   0,
#[Out]#          0,   0,   0,   0,   0,   0,   0,   0,   0,   3,  74,   0,  76,
#[Out]#         71,  86,   0,  33, 150,   0, 117,  10, 320,  94,  41,  61,  15,
#[Out]#          8, 127,   5, 254, 170,   0,  18, 109,  41,  48,  41,   0,   0,
#[Out]#         51,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  36, 152,
#[Out]#          5, 119,  13, 183,   3,  33, 343,  36,   0,   0,   0,   0,   8,
#[Out]#         30,  74,   0,  91,  99, 130,  69,   0,   0,   0,   0,   0,  28,
#[Out]#        130,  30, 196,   0,   0, 206,  53,   0,   0,  33,  41,   0,   0,
#[Out]#          0], dtype=int64)
, 20 May 2018 21:34:39
inches = rainfall / 254 
, 20 May 2018 21:34:44
inches.shape
#[Out]# (365,)
, 20 May 2018 21:34:52
inches[:5]
#[Out]# array([0.        , 0.16141732, 0.05905512, 0.        , 0.        ])
, 20 May 2018 21:35:23
plt.hist(inches,40) # 40????
#[Out]# (array([245.,  14.,  13.,  17.,   8.,   6.,   5.,   6.,   4.,   3.,   7.,
#[Out]#           6.,   3.,   3.,   3.,   4.,   4.,   2.,   4.,   0.,   0.,   1.,
#[Out]#           1.,   1.,   0.,   0.,   0.,   2.,   1.,   1.,   0.,   0.,   0.,
#[Out]#           0.,   0.,   0.,   0.,   0.,   0.,   1.]),
#[Out]#  array([0.        , 0.04596457, 0.09192913, 0.1378937 , 0.18385827,
#[Out]#         0.22982283, 0.2757874 , 0.32175197, 0.36771654, 0.4136811 ,
#[Out]#         0.45964567, 0.50561024, 0.5515748 , 0.59753937, 0.64350394,
#[Out]#         0.6894685 , 0.73543307, 0.78139764, 0.8273622 , 0.87332677,
#[Out]#         0.91929134, 0.96525591, 1.01122047, 1.05718504, 1.10314961,
#[Out]#         1.14911417, 1.19507874, 1.24104331, 1.28700787, 1.33297244,
#[Out]#         1.37893701, 1.42490157, 1.47086614, 1.51683071, 1.56279528,
#[Out]#         1.60875984, 1.65472441, 1.70068898, 1.74665354, 1.79261811,
#[Out]#         1.83858268]),
#[Out]#  <a list of 40 Patch objects>)
, 20 May 2018 21:38:50
x = np.array([1,2,3,4,5])
, 20 May 2018 21:38:54
x < 3
#[Out]# array([ True,  True, False, False, False])
, 20 May 2018 21:39:01
x > 3
#[Out]# array([False, False, False,  True,  True])
, 20 May 2018 21:39:07
x <=
, 20 May 2018 21:39:10
x <= 3
#[Out]# array([ True,  True,  True, False, False])
, 20 May 2018 21:39:13
x >= 3
#[Out]# array([False, False,  True,  True,  True])
, 20 May 2018 21:39:21
x != 3
#[Out]# array([ True,  True, False,  True,  True])
, 20 May 2018 21:39:32
x == 3
#[Out]# array([False, False,  True, False, False])
, 20 May 2018 21:39:50
(2 * x) ==(x ** 2)
#[Out]# array([False,  True, False, False, False])
, 20 May 2018 21:40:19
clear
, 20 May 2018 21:40:21
cl
, 20 May 2018 21:40:28
get_ipython().run_line_magic('clear', '')
, 20 May 2018 21:40:53
rng = np.random.RandomState(0)
, 20 May 2018 21:41:06
x = rng.randint(10,size(3,4))
, 20 May 2018 21:41:34
x = rng.randint(12,size(3,4))
, 20 May 2018 21:41:47
x = rng.randint(10,size=(3,4))
, 20 May 2018 21:41:48
x
#[Out]# array([[5, 0, 3, 3],
#[Out]#        [7, 9, 3, 5],
#[Out]#        [2, 4, 7, 6]])
, 20 May 2018 21:41:59
x < 6
#[Out]# array([[ True,  True,  True,  True],
#[Out]#        [False, False,  True,  True],
#[Out]#        [ True,  True, False, False]])
, 20 May 2018 21:42:12
print(x)
, 20 May 2018 21:42:30
np.count_nonzero(x < 6)
#[Out]# 8
, 20 May 2018 21:42:43
np.sum(x < 6)
#[Out]# 8
, 20 May 2018 21:44:07
np.sum(x < 6 ,axis=1)
#[Out]# array([4, 2, 2])
, 20 May 2018 21:44:09
x
#[Out]# array([[5, 0, 3, 3],
#[Out]#        [7, 9, 3, 5],
#[Out]#        [2, 4, 7, 6]])
, 20 May 2018 21:45:27
np.any(x > 8)
#[Out]# True
, 20 May 2018 21:45:39
np.any(x < 0)
#[Out]# False
, 20 May 2018 21:47:52
np.any(x > 4)
#[Out]# True
, 20 May 2018 21:48:24
get_ipython().run_line_magic('pinfo', 'np.any')
, 20 May 2018 21:49:33
np.all(x < 10)
#[Out]# True
, 20 May 2018 21:49:46
np.all(x == 6)
#[Out]# False
, 20 May 2018 21:50:03
np.all(x < 8,axis=1)
#[Out]# array([ True, False,  True])
, 20 May 2018 21:50:05
x
#[Out]# array([[5, 0, 3, 3],
#[Out]#        [7, 9, 3, 5],
#[Out]#        [2, 4, 7, 6]])
, 20 May 2018 21:52:00
np.sum((inches > 0.5) & (inches <1)) # 统计天数
#[Out]# 29
, 20 May 2018 21:53:07
np.sum(((inches <= 0.5) | (inches>=1)))
#[Out]# 336
, 20 May 2018 21:53:22
np.sum(~((inches <= 0.5) | (inches>=1)))
#[Out]# 29
, 20 May 2018 21:54:40
np.sum(inches==0))
, 20 May 2018 21:54:46
np.sum(inches==0)
#[Out]# 215
, 20 May 2018 21:55:01
np.sum(inches != 0)
#[Out]# 150
, 20 May 2018 21:55:14
inches
#[Out]# array([0.        , 0.16141732, 0.05905512, 0.        , 0.        ,
#[Out]#        0.01181102, 0.48031496, 0.38188976, 0.22834646, 0.16929134,
#[Out]#        0.83858268, 0.05905512, 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.01968504, 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.3503937 , 0.8503937 , 0.        ,
#[Out]#        0.09055118, 0.07874016, 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.2007874 , 0.01968504,
#[Out]#        0.72047244, 0.66929134, 0.18110236, 0.07086614, 0.37007874,
#[Out]#        0.46062992, 1.03937008, 0.57086614, 0.5984252 , 0.03937008,
#[Out]#        0.11811024, 0.11023622, 0.0984252 , 0.24015748, 0.51181102,
#[Out]#        0.01181102, 0.        , 0.        , 0.        , 0.01968504,
#[Out]#        0.7519685 , 0.42125984, 0.6496063 , 1.83858268, 0.11811024,
#[Out]#        0.        , 1.27165354, 0.16929134, 0.74015748, 0.        ,
#[Out]#        0.        , 0.01968504, 0.27165354, 0.31889764, 1.09055118,
#[Out]#        0.01181102, 0.        , 0.01968504, 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.16141732, 0.14173228,
#[Out]#        0.01181102, 0.87007874, 0.5511811 , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.0984252 , 0.        , 0.18110236,
#[Out]#        0.        , 0.        , 0.18110236, 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.01968504,
#[Out]#        0.42913386, 0.72834646, 0.        , 0.53937008, 0.        ,
#[Out]#        0.2007874 , 0.55905512, 0.3503937 , 0.48818898, 0.        ,
#[Out]#        0.12992126, 0.27165354, 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 1.31102362, 0.62992126, 0.2007874 ,
#[Out]#        0.        , 0.        , 0.53937008, 0.07874016, 0.01968504,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.1496063 , 0.        , 0.22047244,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.07086614, 0.2519685 , 0.        ,
#[Out]#        0.01968504, 0.14173228, 0.0511811 , 0.        , 0.03149606,
#[Out]#        0.01181102, 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.07086614, 0.09055118, 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.01181102, 0.75984252, 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.01968504, 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.01968504, 0.5       , 0.8503937 ,
#[Out]#        0.        , 0.03937008, 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.33070866, 0.0511811 , 0.        , 0.11811024,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.01968504,
#[Out]#        0.01181102, 0.        , 0.        , 0.        , 0.01181102,
#[Out]#        0.72047244, 0.7992126 , 0.16929134, 0.3503937 , 0.        ,
#[Out]#        0.        , 0.03149606, 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.01181102, 0.29133858, 0.        ,
#[Out]#        0.2992126 , 0.27952756, 0.33858268, 0.        , 0.12992126,
#[Out]#        0.59055118, 0.        , 0.46062992, 0.03937008, 1.25984252,
#[Out]#        0.37007874, 0.16141732, 0.24015748, 0.05905512, 0.03149606,
#[Out]#        0.5       , 0.01968504, 1.        , 0.66929134, 0.        ,
#[Out]#        0.07086614, 0.42913386, 0.16141732, 0.18897638, 0.16141732,
#[Out]#        0.        , 0.        , 0.2007874 , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.        , 0.14173228, 0.5984252 ,
#[Out]#        0.01968504, 0.46850394, 0.0511811 , 0.72047244, 0.01181102,
#[Out]#        0.12992126, 1.3503937 , 0.14173228, 0.        , 0.        ,
#[Out]#        0.        , 0.        , 0.03149606, 0.11811024, 0.29133858,
#[Out]#        0.        , 0.35826772, 0.38976378, 0.51181102, 0.27165354,
#[Out]#        0.        , 0.        , 0.        , 0.        , 0.        ,
#[Out]#        0.11023622, 0.51181102, 0.11811024, 0.77165354, 0.        ,
#[Out]#        0.        , 0.81102362, 0.20866142, 0.        , 0.        ,
#[Out]#        0.12992126, 0.16141732, 0.        , 0.        , 0.        ])
, 20 May 2018 21:55:19
print(inches)
, 20 May 2018 21:55:24
inches.shape
#[Out]# (365,)
, 20 May 2018 21:55:44
np.sum(inches > 0.5)
#[Out]# 37
, 20 May 2018 21:56:14
np.sum((inches >0) & (inches) < 0.2)
, 20 May 2018 21:57:02
np.sum((inches >0) & (inches < 0.2))
#[Out]# 75
, 20 May 2018 21:57:17
x
#[Out]# array([[5, 0, 3, 3],
#[Out]#        [7, 9, 3, 5],
#[Out]#        [2, 4, 7, 6]])
, 20 May 2018 21:57:25
x < 5
#[Out]# array([[False,  True,  True,  True],
#[Out]#        [False, False,  True, False],
#[Out]#        [ True,  True, False, False]])
, 20 May 2018 21:57:40
x[x < 5]
#[Out]# array([0, 3, 3, 3, 2, 4])
, 20 May 2018 21:58:21
rainy = inches > 0
, 20 May 2018 22:00:17
summer = (np.arange(365) - 172 < 90)&(np.arange(365) - 172>0)#6月21号是第172天
, 20 May 2018 22:01:06
np.median(inches[rainy])
#[Out]# 0.19488188976377951
, 20 May 2018 22:01:31
np.median(inches[summer])
#[Out]# 0.0
, 20 May 2018 22:02:10
np.max(inches[summer])
#[Out]# 0.8503937007874016
, 20 May 2018 22:02:44
np.median(inches[rainy & ~summer])
#[Out]# 0.20078740157480315
, 20 May 2018 22:05:01
x = np.arange(10)
, 20 May 2018 22:05:19
(x>4) &(x<8)
#[Out]# array([False, False, False, False, False,  True,  True,  True, False,
#[Out]#        False])
, 20 May 2018 22:05:29
(x>4) and (x<8)
, 20 May 2018 22:06:21
import numpy as np
, 20 May 2018 22:06:40
rand = np.random.RandomState(42)
, 20 May 2018 22:06:59
x = rand.randint(100,size=10)
, 20 May 2018 22:07:03
x
#[Out]# array([51, 92, 14, 71, 60, 20, 82, 86, 74, 74])
, 20 May 2018 22:07:36
ind =[3,6,4]
, 20 May 2018 22:07:41
x[ind]
#[Out]# array([71, 82, 60])
, 20 May 2018 22:08:14
ind = np.array([3,7],[4,5])
, 20 May 2018 22:08:33
ind = np.array([[3,7],[4,5]])
, 20 May 2018 22:08:43
x[ind]
#[Out]# array([[71, 86],
#[Out]#        [60, 20]])
, 20 May 2018 22:09:14
x = np.arange(12).reshape((3,4))
, 20 May 2018 22:09:15
x
#[Out]# array([[ 0,  1,  2,  3],
#[Out]#        [ 4,  5,  6,  7],
#[Out]#        [ 8,  9, 10, 11]])
, 20 May 2018 22:09:30
row = np.array([0,1,2])
, 20 May 2018 22:09:46
col = np.array([2,1,3])
, 20 May 2018 22:11:42
x[row,col]
#[Out]# array([ 2,  5, 11])
, 20 May 2018 22:14:02
x[row[:,np.newaxis],col]
#[Out]# array([[ 2,  1,  3],
#[Out]#        [ 6,  5,  7],
#[Out]#        [10,  9, 11]])
, 20 May 2018 22:15:36
row[:,np.newaxis] * col
#[Out]# array([[0, 0, 0],
#[Out]#        [2, 1, 3],
#[Out]#        [4, 2, 6]])
, 20 May 2018 22:17:03
print(x)
, 20 May 2018 22:17:17
x[2,[2,0,1]]
#[Out]# array([10,  8,  9])
, 20 May 2018 22:17:58
x[1:,[2,0,1]]
#[Out]# array([[ 6,  4,  5],
#[Out]#        [10,  8,  9]])
, 20 May 2018 22:18:40
mask = np.array([1,0,1,0],dtype='bool')
, 20 May 2018 22:19:02
x[row[:,np.newaxis],mask]
#[Out]# array([[ 0,  2],
#[Out]#        [ 4,  6],
#[Out]#        [ 8, 10]])
, 20 May 2018 22:19:23
x
#[Out]# array([[ 0,  1,  2,  3],
#[Out]#        [ 4,  5,  6,  7],
#[Out]#        [ 8,  9, 10, 11]])
, 20 May 2018 22:19:24
row
#[Out]# array([0, 1, 2])
, 20 May 2018 22:20:52
mean = [0,0]
, 20 May 2018 22:21:02
cov = [[1,2],[2,5]]
, 20 May 2018 22:21:18
x = rand.multivariate_normal(mean,cov,100)
, 20 May 2018 22:21:23
x.shape
#[Out]# (100, 2)
, 20 May 2018 22:21:52
seaborn.set()
, 20 May 2018 22:22:12
plt.scatter(x[:,0].x[:,1])
, 20 May 2018 22:22:18
x
#[Out]# array([[-0.644508  , -0.46220608],
#[Out]#        [ 0.7376352 ,  1.21236921],
#[Out]#        [ 0.88151763,  1.12795177],
#[Out]#        [ 2.04998983,  5.97778598],
#[Out]#        [-0.1711348 , -2.06258746],
#[Out]#        [ 0.67956979,  0.83705124],
#[Out]#        [ 1.46860232,  1.22961093],
#[Out]#        [ 0.35282131,  1.49875397],
#[Out]#        [-2.51552505, -5.64629995],
#[Out]#        [ 0.0843329 , -0.3543059 ],
#[Out]#        [ 0.19199272,  1.48901291],
#[Out]#        [-0.02566217, -0.74987887],
#[Out]#        [ 1.00569227,  2.25287315],
#[Out]#        [ 0.49514263,  1.18939673],
#[Out]#        [ 0.0629872 ,  0.57349278],
#[Out]#        [ 0.75093031,  2.99487004],
#[Out]#        [-3.0236127 , -6.00766046],
#[Out]#        [-0.53943081, -0.3478899 ],
#[Out]#        [ 1.53817376,  1.99973464],
#[Out]#        [-0.50886808, -1.81099656],
#[Out]#        [ 1.58115602,  2.86410319],
#[Out]#        [ 0.99305043,  2.54294059],
#[Out]#        [-0.87753796, -1.15767204],
#[Out]#        [-1.11518048, -1.87508012],
#[Out]#        [ 0.4299908 ,  0.36324254],
#[Out]#        [ 0.97253528,  3.53815717],
#[Out]#        [ 0.32124996,  0.33137032],
#[Out]#        [-0.74618649, -2.77366681],
#[Out]#        [-0.88473953, -1.81495444],
#[Out]#        [ 0.98783862,  2.30280401],
#[Out]#        [-1.2033623 , -2.04402725],
#[Out]#        [-1.51101746, -3.2818741 ],
#[Out]#        [-2.76337717, -7.66760648],
#[Out]#        [ 0.39158553,  0.87949228],
#[Out]#        [ 0.91181024,  3.32968944],
#[Out]#        [-0.84202629, -2.01226547],
#[Out]#        [ 1.06586877,  0.95500019],
#[Out]#        [ 0.44457363,  1.87828298],
#[Out]#        [ 0.35936721,  0.40554974],
#[Out]#        [-0.90649669, -0.93486441],
#[Out]#        [-0.35790389, -0.52363012],
#[Out]#        [-1.33461668, -3.03203218],
#[Out]#        [ 0.02815138,  0.79654924],
#[Out]#        [ 0.37785618,  0.51409383],
#[Out]#        [-1.06505097, -2.88726779],
#[Out]#        [ 2.32083881,  5.97698647],
#[Out]#        [ 0.47605744,  0.83634485],
#[Out]#        [-0.35490984, -1.03657119],
#[Out]#        [ 0.57532883, -0.79997124],
#[Out]#        [ 0.33399913,  2.32597923],
#[Out]#        [ 0.6575612 , -0.22389518],
#[Out]#        [ 1.3707365 ,  2.2348831 ],
#[Out]#        [ 0.07099548, -0.29685467],
#[Out]#        [ 0.6074983 ,  1.47089233],
#[Out]#        [-0.34226126, -1.10666237],
#[Out]#        [ 0.69226246,  1.21504303],
#[Out]#        [-0.31112937, -0.75912097],
#[Out]#        [-0.26888327, -1.89366817],
#[Out]#        [ 0.42044896,  1.85189522],
#[Out]#        [ 0.21115245,  2.00781492],
#[Out]#        [-1.83106042, -2.91352836],
#[Out]#        [ 0.7841796 ,  1.97640753],
#[Out]#        [ 0.10259314,  1.24690575],
#[Out]#        [-1.91100558, -3.66800923],
#[Out]#        [ 0.13143756, -0.07833855],
#[Out]#        [-0.1317045 , -1.64159158],
#[Out]#        [-0.14547282, -1.34125678],
#[Out]#        [-0.51172373, -1.40960773],
#[Out]#        [ 0.69758045,  0.72563649],
#[Out]#        [ 0.11677083,  0.88385162],
#[Out]#        [-1.16586444, -2.24482237],
#[Out]#        [-2.23176235, -2.63958101],
#[Out]#        [ 0.37857234,  0.69112594],
#[Out]#        [ 0.87475323,  3.400675  ],
#[Out]#        [-0.86864365, -3.03568353],
#[Out]#        [-1.03637857, -1.18469125],
#[Out]#        [-0.53334959, -0.37039911],
#[Out]#        [ 0.30414557, -0.5828419 ],
#[Out]#        [-1.47656656, -2.13046298],
#[Out]#        [-0.31332021, -1.7895623 ],
#[Out]#        [ 1.12659538,  1.49627535],
#[Out]#        [-1.19675798, -1.51633442],
#[Out]#        [-0.75210154, -0.79770535],
#[Out]#        [ 0.74577693,  1.95834451],
#[Out]#        [ 1.56094354,  2.9330816 ],
#[Out]#        [-0.72009966, -1.99780959],
#[Out]#        [-1.32319163, -2.61218347],
#[Out]#        [-2.56215914, -6.08410838],
#[Out]#        [ 1.31256297,  3.13143269],
#[Out]#        [ 0.51575983,  2.30284639],
#[Out]#        [ 0.01374713, -0.11539344],
#[Out]#        [-0.16863279,  0.39422355],
#[Out]#        [ 0.12065651,  1.13236323],
#[Out]#        [-0.83504984, -2.38632016],
#[Out]#        [ 1.05185885,  1.98418223],
#[Out]#        [-0.69144553, -1.56919875],
#[Out]#        [-1.2567603 , -1.125898  ],
#[Out]#        [ 0.09619333, -0.64335574],
#[Out]#        [-0.99658689, -2.35038099],
#[Out]#        [-1.21405259, -1.77693724]])
, 20 May 2018 22:22:28
plt.scatter(x[:,0],x[:,1])
#[Out]# <matplotlib.collections.PathCollection at 0x2208cb20b70>
, 20 May 2018 22:23:39
indices = np.random.choice(x.shape[0],20,replace=False)
, 20 May 2018 22:23:44
indices
#[Out]# array([58, 54, 17, 12, 13, 51, 60, 26, 94, 85, 27, 71, 62,  6, 64, 87, 90,
#[Out]#        11, 32, 68])
, 20 May 2018 22:24:00
selection = x[indices]
, 20 May 2018 22:24:10
selection.shape
#[Out]# (20, 2)
, 20 May 2018 22:24:23
x.shape[0]
#[Out]# 100
, 20 May 2018 22:24:51
get_ipython().run_line_magic('pinfo', 'np.random.choice')
, 20 May 2018 22:27:57
plt.scatter(x[:,0],x[:,1],alpha=0.3)
#[Out]# <matplotlib.collections.PathCollection at 0x2208f5dd7f0>
, 20 May 2018 22:29:19
plt.scatter(selection[:,0],selection[:,1],facecolor = 'none',edgecolr='b',s=200)
, 20 May 2018 22:29:32
plt.scatter(selection[:,0],selection[:,1],facecolor = 'none',edgecolor='b',s=200)
#[Out]# <matplotlib.collections.PathCollection at 0x2208bd0d438>
, 20 May 2018 22:30:28
x = np.arange(10)
, 20 May 2018 22:30:45
i = np.array([2,1,8,4])
, 20 May 2018 22:31:07
x[i] = 99
, 20 May 2018 22:31:20
print(x)
, 20 May 2018 22:31:26
x
#[Out]# array([ 0, 99, 99,  3, 99,  5,  6,  7, 99,  9])
, 20 May 2018 22:31:41
x[i] -= 10
, 20 May 2018 22:31:48
print(x)
, 20 May 2018 22:32:13
x = np.zeros(10)
, 20 May 2018 22:32:23
x[[0,0]] = [4 ,6]
, 20 May 2018 22:32:34
print(x)
, 20 May 2018 22:33:02
i = [2,3,3,4,4,4]
, 20 May 2018 22:33:08
x[i] += 1
, 20 May 2018 22:33:09
x
#[Out]# array([6., 0., 1., 1., 1., 0., 0., 0., 0., 0.])
, 20 May 2018 22:33:19
x
#[Out]# array([6., 0., 1., 1., 1., 0., 0., 0., 0., 0.])
, 20 May 2018 22:34:16
x = np.zeros(10)
, 20 May 2018 22:34:18
x
#[Out]# array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
, 20 May 2018 22:34:30
np.add.at(x,i,1)
, 20 May 2018 22:34:32
print(x)
, 20 May 2018 22:35:17
np.random.seed(42)
, 20 May 2018 22:35:29
x = np.random.randn(100)
, 20 May 2018 22:35:52
bins = np.linspace(-5,5,20)
, 20 May 2018 22:35:52
x
#[Out]# array([ 0.49671415, -0.1382643 ,  0.64768854,  1.52302986, -0.23415337,
#[Out]#        -0.23413696,  1.57921282,  0.76743473, -0.46947439,  0.54256004,
#[Out]#        -0.46341769, -0.46572975,  0.24196227, -1.91328024, -1.72491783,
#[Out]#        -0.56228753, -1.01283112,  0.31424733, -0.90802408, -1.4123037 ,
#[Out]#         1.46564877, -0.2257763 ,  0.0675282 , -1.42474819, -0.54438272,
#[Out]#         0.11092259, -1.15099358,  0.37569802, -0.60063869, -0.29169375,
#[Out]#        -0.60170661,  1.85227818, -0.01349722, -1.05771093,  0.82254491,
#[Out]#        -1.22084365,  0.2088636 , -1.95967012, -1.32818605,  0.19686124,
#[Out]#         0.73846658,  0.17136828, -0.11564828, -0.3011037 , -1.47852199,
#[Out]#        -0.71984421, -0.46063877,  1.05712223,  0.34361829, -1.76304016,
#[Out]#         0.32408397, -0.38508228, -0.676922  ,  0.61167629,  1.03099952,
#[Out]#         0.93128012, -0.83921752, -0.30921238,  0.33126343,  0.97554513,
#[Out]#        -0.47917424, -0.18565898, -1.10633497, -1.19620662,  0.81252582,
#[Out]#         1.35624003, -0.07201012,  1.0035329 ,  0.36163603, -0.64511975,
#[Out]#         0.36139561,  1.53803657, -0.03582604,  1.56464366, -2.6197451 ,
#[Out]#         0.8219025 ,  0.08704707, -0.29900735,  0.09176078, -1.98756891,
#[Out]#        -0.21967189,  0.35711257,  1.47789404, -0.51827022, -0.8084936 ,
#[Out]#        -0.50175704,  0.91540212,  0.32875111, -0.5297602 ,  0.51326743,
#[Out]#         0.09707755,  0.96864499, -0.70205309, -0.32766215, -0.39210815,
#[Out]#        -1.46351495,  0.29612028,  0.26105527,  0.00511346, -0.23458713])
, 20 May 2018 22:35:57
bins
#[Out]# array([-5.        , -4.47368421, -3.94736842, -3.42105263, -2.89473684,
#[Out]#        -2.36842105, -1.84210526, -1.31578947, -0.78947368, -0.26315789,
#[Out]#         0.26315789,  0.78947368,  1.31578947,  1.84210526,  2.36842105,
#[Out]#         2.89473684,  3.42105263,  3.94736842,  4.47368421,  5.        ])
, 20 May 2018 22:36:11
counts = np.zeros_like(bins)
, 20 May 2018 22:36:13
counts
#[Out]# array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
#[Out]#        0., 0., 0.])
, 20 May 2018 22:36:29
i = np.searchsorted(bins,x)
, 20 May 2018 22:36:31
i
#[Out]# array([11, 10, 11, 13, 10, 10, 13, 11,  9, 11,  9,  9, 10,  6,  7,  9,  8,
#[Out]#        11,  8,  7, 13, 10, 10,  7,  9, 10,  8, 11,  9,  9,  9, 14, 10,  8,
#[Out]#        12,  8, 10,  6,  7, 10, 11, 10, 10,  9,  7,  9,  9, 12, 11,  7, 11,
#[Out]#         9,  9, 11, 12, 12,  8,  9, 11, 12,  9, 10,  8,  8, 12, 13, 10, 12,
#[Out]#        11,  9, 11, 13, 10, 13,  5, 12, 10,  9, 10,  6, 10, 11, 13,  9,  8,
#[Out]#         9, 12, 11,  9, 11, 10, 12,  9,  9,  9,  7, 11, 10, 10, 10],
#[Out]#       dtype=int64)
, 20 May 2018 22:36:45
np.add.at(counts,i,1)
, 20 May 2018 22:36:48
i
#[Out]# array([11, 10, 11, 13, 10, 10, 13, 11,  9, 11,  9,  9, 10,  6,  7,  9,  8,
#[Out]#        11,  8,  7, 13, 10, 10,  7,  9, 10,  8, 11,  9,  9,  9, 14, 10,  8,
#[Out]#        12,  8, 10,  6,  7, 10, 11, 10, 10,  9,  7,  9,  9, 12, 11,  7, 11,
#[Out]#         9,  9, 11, 12, 12,  8,  9, 11, 12,  9, 10,  8,  8, 12, 13, 10, 12,
#[Out]#        11,  9, 11, 13, 10, 13,  5, 12, 10,  9, 10,  6, 10, 11, 13,  9,  8,
#[Out]#         9, 12, 11,  9, 11, 10, 12,  9,  9,  9,  7, 11, 10, 10, 10],
#[Out]#       dtype=int64)
, 20 May 2018 22:37:24
plt.plot(bins,counts,linestyle='steps')
#[Out]# [<matplotlib.lines.Line2D at 0x2208c62d710>]
, 20 May 2018 22:43:34
def selection_sort(x):
    for i in range(len(x)):
        swap = i + np.argmin(x[i:])
        (x[i],x[swap]) = (x[swap],x[i])
    return x
, 20 May 2018 22:44:35
x = np.array([2,1,4,3,5])
, 20 May 2018 22:46:50
selection_sort(x)
#[Out]# array([1, 2, 3, 4, 5])
, 20 May 2018 22:48:24
x.sort()
, 20 May 2018 22:48:25
x
#[Out]# array([1, 2, 3, 4, 5])
, 20 May 2018 22:48:29
x = np.array([2,1,4,3,5])
, 20 May 2018 22:48:33
x.sort()
, 20 May 2018 22:48:34
x
#[Out]# array([1, 2, 3, 4, 5])
, 20 May 2018 22:53:04
x = np.array([2,1,4,3,5])
, 20 May 2018 22:53:10
np.sort(x)
#[Out]# array([1, 2, 3, 4, 5])
, 20 May 2018 22:55:15
x.sort()
, 20 May 2018 22:55:19
print(x)
, 20 May 2018 22:55:29
x = np.array([2,1,4,3,5])
, 20 May 2018 22:55:36
i = np.argsort(x)
, 20 May 2018 22:55:41
print(x)
, 20 May 2018 22:55:59
print(i)
, 20 May 2018 22:57:52
x[i]
#[Out]# array([1, 2, 3, 4, 5])
, 20 May 2018 23:02:10
rand = np.random.RandomState(42)
, 20 May 2018 23:02:29
x = rand.randint(0,10,(4,6))
, 20 May 2018 23:02:32
x 
#[Out]# array([[6, 3, 7, 4, 6, 9],
#[Out]#        [2, 6, 7, 4, 3, 7],
#[Out]#        [7, 2, 5, 4, 1, 7],
#[Out]#        [5, 1, 4, 0, 9, 5]])
, 20 May 2018 23:03:58
x
#[Out]# array([[6, 3, 7, 4, 6, 9],
#[Out]#        [2, 6, 7, 4, 3, 7],
#[Out]#        [7, 2, 5, 4, 1, 7],
#[Out]#        [5, 1, 4, 0, 9, 5]])
, 20 May 2018 23:04:06
np.sort(x,axis=0)
#[Out]# array([[2, 1, 4, 0, 1, 5],
#[Out]#        [5, 2, 5, 4, 3, 7],
#[Out]#        [6, 3, 7, 4, 6, 7],
#[Out]#        [7, 6, 7, 4, 9, 9]])
, 20 May 2018 23:06:48
np.sort(x,axis=1)
#[Out]# array([[3, 4, 6, 6, 7, 9],
#[Out]#        [2, 3, 4, 6, 7, 7],
#[Out]#        [1, 2, 4, 5, 7, 7],
#[Out]#        [0, 1, 4, 5, 5, 9]])
, 20 May 2018 23:10:58
x = np.array([7,2,3,1,6,5,4])
, 20 May 2018 23:11:28
np.partition(x,3)
#[Out]# array([2, 1, 3, 4, 6, 5, 7])
, 20 May 2018 23:12:50
np.partition(x,2,axis=1)
, 20 May 2018 23:13:05
np.partition(x,2,axis=0)
#[Out]# array([1, 2, 3, 7, 6, 5, 4])
, 20 May 2018 23:13:12
x
#[Out]# array([7, 2, 3, 1, 6, 5, 4])
, 20 May 2018 23:13:29
np.partition(x,2,axis=1)
, 20 May 2018 23:14:10
x = rand.rand(10,2)
, 20 May 2018 23:14:11
x
#[Out]# array([[0.00706631, 0.02306243],
#[Out]#        [0.52477466, 0.39986097],
#[Out]#        [0.04666566, 0.97375552],
#[Out]#        [0.23277134, 0.09060643],
#[Out]#        [0.61838601, 0.38246199],
#[Out]#        [0.98323089, 0.46676289],
#[Out]#        [0.85994041, 0.68030754],
#[Out]#        [0.45049925, 0.01326496],
#[Out]#        [0.94220176, 0.56328822],
#[Out]#        [0.3854165 , 0.01596625]])
, 20 May 2018 23:14:30
seaborn.set()
, 20 May 2018 23:14:52
plt.scatter(x[:,0],x[:,1],s=100)
#[Out]# <matplotlib.collections.PathCollection at 0x2208c9cfa90>
, 20 May 2018 23:19:28
dist_sq = np.sum((x[:,np.newaxis,:] - x[np.newaxis,:,:]) ** 2,axis=1)
, 20 May 2018 23:20:20
differences = x[:,np.newaxis,:] - x[np.newaxis,:,:]
, 20 May 2018 23:20:28
differences.shape
#[Out]# (10, 10, 2)
, 20 May 2018 23:20:47
sq_differences = differences ** 2
, 20 May 2018 23:20:53
sq_differences.shape
#[Out]# (10, 10, 2)
, 20 May 2018 23:21:11
dist_sq =sq_differences.sum(-1)
, 20 May 2018 23:21:24
dist_sq.shape
#[Out]# (10, 10)
, 20 May 2018 23:32:42
get_ipython().run_line_magic('logstop', '')
